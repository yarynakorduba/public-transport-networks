import React from "react"
import Latex from "react-latex"

import BEM from "../../helpers/BEM.js"
import "./Article.scss"

import RadialForceGraph from "../ForceGraph/RadialForceGraph"
import ForceGraph from "../ForceGraph"

const b = BEM("Article")

const Chapter_3 = () => (
  <section>
    <h1 className={b("header")}>Науковий підхід</h1>
    {/*<div className={b("illustration", ["wide"])}>*/}
    {/*<RadialForceGraph />*/}
    {/*</div>*/}
    {/*<div className={b("illustration")}>*/}
    {/*<ForceGraph />*/}
    {/*</div>*/}
    <p className={b("paragraph", ["first"])}>
      Один із методів дослідження транспортних систем - теорія комплексних мереж.. Уявімо систему громадського
      транспорту. Це система зв’язків. На зупинці вул. Шухевича зупиняються трамвай №8 і автобус №53. Ці два маршрути
      пов’язані. Пов’язує їх спільна зупинка. Назвімо її вузлом. Трамвай далі поїде на зупинку вул. Саксаганського.
      Зупинки “вул. Саксаганського” і “вул. Шухевича” також пов’язані. Назвімо їхній зв’язок ребром. Вузли і ребра
      формують мережу, або граф. Його ми і будемо досліджувати у рамках теорії комплексних мереж.
    </p>
    <p className={b("paragraph")}>
      Наша початкова мета - не динамічні властивості (дослідження швидкості руху транспорту, розкладу, навантаження
      мережі тощо), а структура транспортної мережі. Тому схему маршрутів можна спростити. Для цього залишимо сам
      скелет:
      <ol>
        <li>Забудемо про напрямки маршрутів. Їх позначати не будемо.</li>
        <li>Якщо прямий і зворотний маршрути не відрізняються, об’єднуємо дві лінії в одну.</li>
        <li>Якщо між двома зупинками є декілька зв’язків, залишаємо лише один.</li>
      </ol>
    </p>
    <p className={b("paragraph")}>
      Тепер можна перейти до графа. Існують різні способи його побудови. Ми зображаємо граф у трьох різних вимірах:
      L-просторі , P-просторі i C-просторі.
    </p>
    <p className={b("paragraph")}>
      L-простір. Давайте позначимо кожну зупинку громадського транспорту, як вузол. А ребра слугуватимуть, як позначення
      маршрутів. Ось це і називатиметься L-простором. Як приклад, розглянемо трамвайні маршрути №5 і №7:
    </p>
    <img src={"img/lviv_example_routes.svg"} alt={"Lviv Routes Example"} className={b("image")} />
    <p className={b("paragraph")}>Їхній L-простір виглядатиме так: </p>
    <img src={"img/lviv_example_l_space.svg"} alt={"Lviv Routes Example"} className={b("image")} />
    <p className={b("paragraph")}>Карта київського метро - це насправді також L-простір.</p>
    <figure>
      <img className={b("image")} src={"img/chapter_3/kyiv_metro.png"} alt={"Kyiv Metro"} />
      <figcaption className={b("image-caption")}>
        Схема київського метрополітену. (Фото з{" "}
        <a href={"https://commons.wikimedia.org/wiki/File:London_General_Omnibus_Company_(c.1903).jpg"}>Вікіпедії</a>)
      </figcaption>
    </figure>
    <p className={b("paragraph")}>
      P-простір. Побудуємо граф, подібний до попереднього (графа в L-просторі). Однак зараз вузли (зупинки) будуть
      з’єднані, якщо вони належать до одного маршруту. Математичною мовою маршрути - це повні підграфи транспортної
      системи
    </p>
    <p className={b("paragraph")}>
      C-простір. Давайте узагальнимо вигляд транспортної системи. Позначимо вузлами маршрути. Ті маршрути, що
      перетинаються, з’єднує ребро. В C-просторі легко побачити кількість пересадок між двома маршрутами. Як приклад,
      розглянемо три маршрути - трамвайні лінії №5, 7 , та маршрутку №8.
    </p>
    <p className={b("paragraph")}>
      Можна побачити, що №5 та №7 мають спільні зупинки (Театр Ляльок, вул. Підвальна). Однак маршрут №8 повністю
      ізольований, а отже наш C-простір виглядатиме наступним чином
    </p>

  </section>
)

export default Chapter_3
