{"version":3,"sources":["serviceWorker.js","reducers/data.js","actions/actionTypes.js","reducers/index.js","configureStore.js","helpers/BEM.js","components/Article/Chapter_1.js","components/Article/Chapter_2/Subchapter_2_1.js","components/Article/Chapter_2/Subchapter_2_2.js","components/Article/Chapter_2/Chapter_2.js","components/Article/Chapter_3.js","components/CitiesInfoTable/CitiesInfoTable.js","components/RadarChart/RadarRay.js","components/RadarChart/RadarPolygon.js","components/RadarChart/RadarChart.js","components/CitySwitcher/CitySwitcher.js","components/CitiesInfoBlock/CitiesInfoBlock.js","components/HeatMap/TransportTypeSwitcher.js","helpers/index.js","api/index.js","actions/index.js","components/HOC.js","components/HeatMap/HeatMap.js","components/HeatMap/helpers.js","components/Article/Chapter_4/Subchapter_4_1.js","components/Article/Chapter_4/Subchapter_4_2.js","components/Article/Chapter_4/Chapter_4.js","components/GraphVisualization/helpers.js","components/GraphVisualization/ForceGraph.js","components/Article/Chapter_5/Subchapter_5_1.js","components/Article/Chapter_5/Subchapter_5_2.js","components/Article/Chapter_5/Subchapter_5_3.js","components/Article/Chapter_5/Chapter_5.js","components/Article/Chapter_8/Subchapter_8_1.js","components/Article/Chapter_8/Subchapter_8_2.js","components/Article/Chapter_8/Subchapter_8_3.js","components/Article/Chapter_8/Subchapter_8_4.js","components/Article/Chapter_8/Chapter_8.js","components/Article/Chapter_9.js","components/Article/Chapter_10.js","components/Article/Contents/Contents.js","components/Article/Preface/Preface.js","components/Article/Preface/index.js","components/Trigger/Trigger.js","components/Article/Article.js","components/Article/index.js","components/App.js","components/Root.js","configRecomposeStream.js","index.js"],"names":["Boolean","window","location","hostname","match","combineReducers","data","state","arguments","length","undefined","action","type","assocPath","city","prop","areFetching","articleApp","getStops","pathOr","fromData","areStopsFetching","getStationTypes","areStationTypesFetching","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","middlewares","thunk","createStore","applyMiddleware","apply","ELEMENT_SEPARATOR","MODIFIER_SEPARATOR","b","elementName","e","m","modifiers","Array","isArray","Object","keys","filter","modifier","_ref","base","join","concat","toConsumableArray","map","trim","getBEMPAth","BEM","Chapter_1","react_default","a","createElement","id","className","href","src","alt","Subchapter_2_1","Subchapter_2_2","Chapter_2","Chapter_2_Subchapter_2_1","Chapter_2_Subchapter_2_2","Chapter_3","latex_default","enhancer","mapProps","_ref2","cityNames","cityPropertiesLabels","mapObjIndexed","head","values","cityPropertiesKeys","key","style","color","property","propertyValue","RadarRay","x","rayLabel","targetPoint","textAnchor","Math","abs","y","vx_shape_es","from","Point","to","withProps","polygonPointsList","polygonPoints","reduce","acc","_ref3","_ref$color","fill","stroke","points","getStepAlongCircle","dataLength","PI","genRadarRaysPoints","radius","_","i","sin","cos","defaultProps","width","height","margin","top","left","right","bottom","_ref5","_ref5$margin","yScale","scaleLinear","range","domain","_ref6","objectSpread","_ref7","propertyKey","rest","objectWithoutProperties","maxBy","_ref8","maxPropertyValues","raysPoints","polygonData","scale","console","log","vx_group_es","point","RadarChart_RadarRay","RadarChart_RadarPolygon","_ref4","cx","cy","r","withHandlers","handleChange","changeDisplayedCities","ev","target","checked","active","onChange","mapPropsStream","props$","combineLatest","ajax","getJSON","pipe","slicedToArray","props","branch","renderComponent","withStateHandlers","cityName","isChecked","cityKey","equals","components_CitiesInfoTable_CitiesInfoTable","components_CitySwitcher_CitySwitcher","components_RadarChart_RadarChart","labels","stationTypes","handleSelect","name","selectedTransportTypes","label","includes","mapIndexed","addIndex","arrayToObject","curry","keyFn","array","obj","item","replaceConnectionsInNode","node","assoc","append","without","connections","removeNodeListFromGraph","arrayOfNodes","graph","graphClone","clone","forEach","nodeId","_graph$nodeId$connect","first","second","DANGEROUSLY_removeNodeFromGraph","convertBusStopsDataToGeoJSON","featureCollection","lat","lon","properties","connectedRoutes","geometry","coordinates","getStopsQuery","gql","_templateObject","getStationTypesQuery","_templateObject2","fetchStopsStart","fetchStopsSuccess","stops","fetchStopsError","error","fetchStationTypesStart","fetchStationTypesSuccess","fetchStationTypesError","withCalculatedChartSize","withParentSize","renameProps","parentHeight","parentWidth","chartWidth","chartHeight","withStationTypes","connect","fetchStationTypes","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","response","wrap","_context2","prev","next","client","query","variables","sent","t0","stop","_x2","this","withStops","fetchStops","_callee","_context","_x","areDataFetching","_ref9","withIndexedStops","_ref10","flip","_bbox","bbox","_bbox2","minX","minY","maxX","maxY","_fitBounds","WebMercatorViewport","fitBounds","padding","initialViewport","longitude","latitude","zoom","selectedStationTypes","transportType","isSelected","n","isEmpty","intersection","stationType","data$","clustersDbscan","mutate","minPoints","features","unclustered","clusters","accum","cluster","center","p","groupBy","startWith","_ref11","_useState","useState","_useState2","viewport","setViewport","mapRef","useRef","getMap","current","useEffect","getSource","setData","handleMapLoaded","geoJSON","addSource","addLayer","source","paint","maxZoomLevel","heatmap-weight","heatmap-intensity","heatmap-color","heatmap-radius","heatmap-opacity","esm","assign","ref","mapStyle","onViewportChange","mapboxApiAccessToken","process","onLoad","components_HeatMap_TransportTypeSwitcher","Subchapter_4_1","components_HeatMap_HeatMap","Subchapter_4_2","Chapter_4","Chapter_4_Subchapter_4_1","components_CitiesInfoBlock_CitiesInfoBlock","Chapter_4_Subchapter_4_2","nodeSpaceRadiusScale","nodeRadiusScale","fontSizeScale","colorScale","scaleSequential","interpolatePlasma","radialNodeSpaceRadiusScale","radialNodeRadiusScale","radialColorScale","radialPositionScale","scaleThreshold","getForceSimulation","forceSimulation","force","forceLink","strength","STRENGTH","forceCollide","forceManyBody","forceCenter","forceY","forceX","getRadialForceSimulation","positionScale","d","forceRadial","prepareDataForGraphSpaceVisualization","graphData","nodeIds","nodes","links","flatten","index","connection","indexOf","ForceGraph","isRadial","setIsRadial","connectionsDomain","extent","path","copy","getRadialSpaceGraphScales","getDefaultSpaceGraphScales","simulation","showLabels","drawChart","rootEl","dragHandler","drag","on","event","alphaTarget","restart","fx","fy","getDragHandler","svg","select","selectAll","remove","attr","enter","call","constrainPositionToBoundingBox","element","coordinate","boundary","max","min","space","Fragment","nodesForRemove","Subchapter_5_1","displayMode","GraphVisualization_ForceGraph","Subchapter_5_2","Subchapter_5_3","Chapter_5","Chapter_5_Subchapter_5_1","Chapter_5_Subchapter_5_2","Chapter_5_Subchapter_5_3","Subchapter_8_1","Subchapter_8_2","Subchapter_8_3","Subchapter_8_4","Chapter_8","Chapter_8_Subchapter_8_1","Chapter_8_Subchapter_8_2","Chapter_8_Subchapter_8_3","Chapter_8_Subchapter_8_4","Chapter_9","Chapter_10","Contents","b1","Preface","Article_Contents_Contents","classname","ScrolledContext","createContext","scrolledData","registerTriggers","position","push","TriggerContext","children","enhancedProps","enhanceProps","prevProps","onWindowScroll","scrolled","getBoundingClientRect","nextProps","sort","identity","addEventListener","removeEventListener","Provider","value","scrolledProgress","Article","Article_Preface","Trigger_TriggerContext","Article_Chapter_1","Article_Chapter_2_Chapter_2","Article_Chapter_3","Article_Chapter_4_Chapter_4","Article_Chapter_5_Chapter_5","Article_Chapter_8_Chapter_8","Article_Chapter_9","Article_Chapter_10","App","components_Article","ApolloClient","uri","Root","store","react_apollo_esm","react_redux_es","components_App","setObservableConfig","fromESObservable","ReactDOM","render","components_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28cfbfbe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","// @flow\nimport {\n  FETCH_STATION_TYPES_ERROR,\n  FETCH_STATION_TYPES_START,\n  FETCH_STATION_TYPES_SUCCESS,\n  FETCH_STOPS_ERROR,\n  FETCH_STOPS_START,\n  FETCH_STOPS_SUCCESS\n} from \"../actions/actionTypes\"\nimport { assocPath, pathOr, prop } from \"ramda\"\nimport { combineReducers } from \"redux\"\n\nconst data = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STOPS_SUCCESS:\n      return assocPath([action.city, \"stops\"], prop(\"stops\", action), state)\n    case FETCH_STATION_TYPES_SUCCESS:\n      return assocPath([action.city, \"stationTypes\"], prop(\"stationTypes\", action), state)\n    case FETCH_STOPS_ERROR:\n    case FETCH_STATION_TYPES_ERROR:\n    default:\n      return state\n  }\n}\n\nconst areFetching = (state: boolean = {}, action: object): boolean => {\n  switch (action.type) {\n    case FETCH_STOPS_START:\n      return assocPath([action.city, \"stops\"], true, state)\n    case FETCH_STATION_TYPES_START:\n      return assocPath([action.city, \"stationTypes\"], true, state)\n    case FETCH_STOPS_SUCCESS:\n    case FETCH_STOPS_ERROR:\n      return assocPath([action.city, \"stops\"], false, state)\n    case FETCH_STATION_TYPES_SUCCESS:\n    case FETCH_STATION_TYPES_ERROR:\n      return assocPath([action.city, \"stationTypes\"], false, state)\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  data,\n  areFetching\n})\n\nexport const areStopsFetching = (state, city) => pathOr(undefined, [\"areFetching\", city, \"stops\"], state)\nexport const getStops = (state, city) => pathOr(undefined, [\"data\", city, \"stops\"], state)\n\nexport const areStationTypesFetching = (state, city) => pathOr(undefined, [\"areFetching\", city, \"stationTypes\"], state)\nexport const getStationTypes = (state, city) => pathOr(undefined, [\"data\", city, \"stationTypes\"], state)\n","export const FETCH_STOPS_START = \"FETCH_STOPS_START\"\nexport const FETCH_STOPS_SUCCESS = \"FETCH_STOPS_SUCCESS\"\nexport const FETCH_STOPS_ERROR = \"FETCH_STOPS_ERROR\"\n\nexport const FETCH_STATION_TYPES_START = \"FETCH_STATION_TYPES_START\"\nexport const FETCH_STATION_TYPES_SUCCESS = \"FETCH_STATION_TYPES_SUCCESS\"\nexport const FETCH_STATION_TYPES_ERROR = \"FETCH_STATION_TYPES_ERROR\"\n","// @flow\nimport { combineReducers } from \"redux\"\nimport data, * as fromData from \"./data\"\n\nconst articleApp = combineReducers({\n  data\n})\n\nexport default articleApp\n\nexport const getStops = (state, city) => fromData.getStops(state.data, city)\nexport const areStopsFetching = (state, city) => fromData.areStopsFetching(state.data, city)\n\nexport const getStationTypes = (state, city) => fromData.getStationTypes(state.data, city)\nexport const areStationTypesFetching = (state, city) => fromData.areStationTypesFetching(state.data, city)\n","import { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport articleApp from \"./reducers\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst configureStore = () => {\n  const middlewares = [thunk]\n  return createStore(articleApp, composeEnhancers(applyMiddleware(...middlewares)))\n}\n\nexport default configureStore\n","// @flow\nconst ELEMENT_SEPARATOR = \"__\",\n  MODIFIER_SEPARATOR = \"_\"\n\nfunction getBEMPAth({ b, e, m }) {\n  const base = e ? [b, e].join(ELEMENT_SEPARATOR) : b\n\n  return [base, ...m.map(modifier => [base, modifier].join(MODIFIER_SEPARATOR))].join(\" \").trim()\n}\n\nconst b = (b: string) => (elementName: ?string | {}, modifiers: ?any = {}): string => {\n  let e, m\n\n  if (typeof elementName === \"string\") {\n    e = elementName\n  } else {\n    modifiers = elementName || {}\n  }\n\n  if (Array.isArray(modifiers)) {\n    m = modifiers\n  } else {\n    m = Object.keys(modifiers).filter(modifier => modifiers[modifier]) || []\n  }\n\n  return getBEMPAth({ b, e, m })\n}\n\nexport default b\n","import React from \"react\"\n\nimport BEM from \"../../helpers/BEM.js\"\nimport \"./Article.scss\"\nconst b = BEM(\"Article\")\n\nconst Chapter_1 = () => (\n  <section id={\"chapter1\"}>\n    <h1 className={b(\"header\")}>Опис проблеми & Історичний прецедент</h1>\n    <p className={b(\"paragraph\", [\"first\"])}>\n      Однією з ключових характеристик сучасного світу є зростання ролі міста. В 1800 році лише{\" \"}\n      <a href={\"https://zbruc.eu/node/60862\"}>3% людей проживали у містах</a>. Та вже в 2007 році кількість міського\n      населення планети{\" \"}\n      <a href={\"https://data.worldbank.org/indicator/sp.urb.totl.in.zs?end=2017&start=1960&view=chart\"}>\n        перевищила 50%\n      </a>\n      . Який простір є комфортним для життя? Як стимулювати розвиток міського бізнесу, інфраструктури та культури?\n      Обговорення цих питань привели до виникнення урбаністики. Урбаністика - наука, спрямована на вирішення потреб\n      сучасного міста і створення комфортних умов для його розвитку. Урбаністика поєднує різні галузі знань: соціологію,\n      антропологію, економіку, щоби зробити міську територію зручною для кожного жителя.\n    </p>\n    <p className={b(\"paragraph\")}>\n      Існує багато відверто невдалих ідей проектування міст, наприклад, “американський шлях”. Його головні риси - масова\n      автомобілізація та повільний розвиток громадського транспорту. Такою концепцією керувались у проектуванні\n      Детройта. У 50 роках ХХ століття місто було{\" \"}\n      <a href={\"https://globalurbanhistory.com/2015/12/06/detroit-capital-of-the-automotive-age/\"}>\n        “автомобільною столицею світу”\n      </a>{\" \"}\n      та однією з найбагатших частин США. Завдяки заводам Ford, Chrysler i General Motors з’являлися тисячі робочих\n      місць. Все більше жителів купували автомобілі за доступними цінами. Водночас система міського транспорту\n      занепадала. У маркетингових кампаніях корпорації показували громадський транспорт як засіб пересування для\n      бідняків.\n    </p>\n    <p className={b(\"paragraph\")}>\n      Підприємства виступали за ліквідацію трамвайних та тролейбусних ліній. Як альтернативу, почали будувати мережу\n      швидкісних магістралей. Врешті, масова автомобілізація привела місто до краху. Детройт перетворився на територію\n      для машин, велику автостоянку некомфортну для життя. Кричущим наслідком стало перетворення{\" \"}\n      <a href={\"https://afterthefinalcurtain.net/2013/04/30/the-michigan-theatre/\"}>приміщення Michigan Theatre</a> у\n      парковку.\n    </p>\n    <figure>\n      <img className={b(\"image\")} src={\"img/chapter1/michiganTheatre.png\"} alt={\"Michigan Theatre in Detroit\"} />\n      <figcaption className={b(\"image-caption\")}>\n        Michigan Theatre. (фото зі{\" \"}\n        <a href={\"https://afterthefinalcurtain.net/2013/04/30/the-michigan-theatre/\"}>статті</a> Matthew Lambros \"The\n        Michigan Theatre\" © Matthew Lambros and After the Final Curtain, 2013. )\n      </figcaption>\n    </figure>\n    <p className={b(\"paragraph\")}>\n      Представники середнього класу почали переїжджати, покидаючи цілі квартали порожніми. Залишилися лише безробітні та\n      робітники з низьким доходом. З’явилися кримінальні угрупування. В 70-их роках через{\" \"}\n      <a\n        href={\n          \"https://uk.wikipedia.org/wiki/%D0%9D%D0%B0%D1%84%D1%82%D0%BE%D0%B2%D0%B0_%D0%BA%D1%80%D0%B8%D0%B7%D0%B0_1973_%D1%80%D0%BE%D0%BA%D1%83\"\n        }\n      >\n        нафтову кризу\n      </a>{\" \"}\n      багато заводів закрили і відтік населення став ще більшим. Загалом за останні півстоліття кількість населення\n      зменшилася в 2.5 рази. Сучасний Детройт - це{\" \"}\n      <a href={\"https://birdinflight.com/ru/vdohnovenie/20180417-ghost-town-detroit.html\"}>місто порожніх вулиць</a>, у\n      якому страшно покидати власний автомобіль.{\" \"}\n      <a href=\"https://uk.wikipedia.org/wiki/%D0%94%D0%B5%D1%82%D1%80%D0%BE%D0%B9%D1%82#%D0%9F%D0%BE%D1%87%D0%B0%D1%82%D0%BE%D0%BA_%D0%B7%D0%B0%D0%BD%D0%B5%D0%BF%D0%B0%D0%B4%D1%83\">\n        [Вікіпедія]\n      </a>\n    </p>\n    <figure>\n      <img\n        className={b(\"image\")}\n        src={\"img/chapter1/detroitPackardPlant.png\"}\n        alt={\"Abandoned Packard Plant in Detroit\"}\n      />\n      <figcaption className={b(\"image-caption\")}>\n        Покинутий завод Packard. (Фото з{\" \"}\n        <a\n          href={\n            \"https://uk.wikipedia.org/wiki/%D0%A4%D0%B0%D0%B9%D0%BB:Abandoned_Packard_Automobile_Factory_Detroit_200.jpg\"\n          }\n        >\n          Вікіпедії\n        </a>\n        )\n      </figcaption>\n    </figure>\n    <p className={b(\"paragraph\")}>\n      Та існує інший, “європейський” шлях розвитку. Один із його прикладів - Амстердам,{\" \"}\n      <a\n        href={\n          \"https://www.theguardian.com/cities/2015/may/05/amsterdam-bicycle-capital-world-transport-cycling-kindermoord\"\n        }\n      >\n        велосипедна столиця світу\n      </a>\n      .\n    </p>{\" \"}\n    <p className={b(\"paragraph\")}>\n      В середині ХХ століття це місто також могло стати на шлях автомобілізації. Влада{\" \"}\n      <a\n        href={\n          \"https://uk.wikipedia.org/wiki/%D0%90%D0%BC%D1%81%D1%82%D0%B5%D1%80%D0%B4%D0%B0%D0%BC#XX_%D1%81%D1%82%D0%BE%D0%BB%D1%96%D1%82%D1%82%D1%8F\"\n        }\n      >\n        почала зносити цілі квартали\n      </a>{\" \"}\n      задля будівництва доріг. Але такі дії викликали спротив жителів. Ще одною причиною невдоволення була висока\n      смертність на дорогах. Активісти групи Stop de Kindermoord (“зупинимо вбивство дітей”) регулярно влаштовували\n      страйки і перекривали автошляхи велосипедами.\n    </p>{\" \"}\n    <p className={b(\"paragraph\")}>\n      В 70-х роках через високі ціни на нафту влада почала нову політику, спрямовану на зменшення використання\n      особистого транспорту. Відбувалися акції{\" \"}\n      <a href={\"https://bicycledutch.wordpress.com/2013/12/01/car-free-sundays-a-40-year-anniversary/\"}>\n        “День без автомобілів”\n      </a>\n      . З’явилися мережі велодоріжок. Зараз вулиці Амстердама проектують, виходячи у першу чергу з потреб пішоходів. У\n      місті практично немає заторів, адже автомобілів тут небагато. Жителі переважно користуються велосипедами або\n      громадським транспортом. <a href={\"https://www.amsterdam.info/transport/public-transport/\"}>Транспортна мережа</a>{\" \"}\n      включає 4 лінії метро, 15 трамвайних ліній, 43 автобусні маршрути та 6 поромів. Останніми можна подорожувати\n      безкоштовно.\n    </p>{\" \"}\n    <p className={b(\"paragraph\")}>\n      Амстердам та загалом Нідерланди - це приклад хорошого планування. Найбільші транспортні вузли часто побудовані, як\n      багаторівневі станції із метро, автостанцією, залізницею та велопарковкою на різних поверхах. Основні їх\n      характеристики - елегантність, продуманість і очевидність. У пасажирів не виникає питань, куди їм потрібно іти.\n      Одна із таких розв’язок - Центральний вокзал Гааги.\n    </p>{\" \"}\n    <figure>\n      <img className={b(\"image\")} src={\"img/chapter1/haagCentralStation.png\"} alt={\"Haag Central Station\"} />\n      <figcaption className={b(\"image-caption\")}>\n        Гаазький багаторівневий вокзал (фото з <a href={\"https://alex-shutyuk.livejournal.com/375362.html\"}>блогу</a>{\" \"}\n        Олександра Шутюка)\n      </figcaption>\n    </figure>\n    <p className={b(\"paragraph\")}>\n      Про <a href={\"https://alex-shutyuk.livejournal.com/375362.html\"}>залізниці Нідерландів</a>\n    </p>\n    <p className={b(\"paragraph\")}>\n      Про <a href={\"http://urbanua.org/dosvid/zakordonni-pryklady/289\"}>дороги та безпеку пересування</a>\n    </p>\n    <p className={b(\"paragraph\")}>\n      Про <a href={\"https://velogen.ua/ukraine/statti/niderland\"}>Амстердам та велосипеди</a>\n    </p>\n    <p className={b(\"paragraph\")}>\n      Урбаністика досліджує багато прикладів планування. Адже основне її завдання - осмислення історичних помилок і\n      вироблення системи рекомендацій, базованих на досвіді та відчуттях. У даній статті ми хочемо розглянути кілька\n      наукових підходів із проектування міст, а саме - проектування транспортних систем на прикладі Лондона, Брістоля і\n      Львова.\n    </p>\n  </section>\n)\n\nexport default Chapter_1\n","import React from \"react\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\n\nconst b = BEM(\"Article\")\n\nconst Subchapter_2_1 = () => (\n  <section>\n    <h2>Брістоль</h2>\n    <p className={b(\"paragraph\")}>Подорожувати у Брістолі можна автобусами, трамваями і поромами.</p>\n    <img className={b(\"image\")} src={\"img/chapter2/bristolTransport.png\"} alt={\"Bristol Transport\"} />\n    <p className={b(\"paragraph\")}>\n      За дослідженням <a href={\"https://www.the-espgroup.com/\"}>ESP Group</a> (транспортний контактний центр\n      Великобританії) мережа міського транспорту Брістоля є однією з{\" \"}\n      <a href={\"https://www.bristolpost.co.uk/news/bristol-news/bristols-public-transport-among-most-702808\"}>\n        найменш\n      </a>{\" \"}\n      комфортних у Британії. Місто займає останню 26-у позицію{\" \"}\n      <a\n        href={\n          \"https://www.dailymail.co.uk/travel/travel_news/article-3667738/Edinburgh-ranked-UK-s-easiest-city-travel-Bristol-Cambridge-hardest-tourist-hotspots-explore.html\"\n        }\n      >\n        із індексом 5.31 з 10\n      </a>\n      . Існує декілька причин такої оцінки:\n    </p>{\" \"}\n    <ul>\n      <li>непунктуальність і повільність транспорту</li>\n      <li>недостатня кількість громадського транспорту</li>\n      <li>високі ціни попри низьку якість сервісу</li>\n      <li>зупинки без накриття</li>\n      <li>перевантаженість доріг</li>\n    </ul>\n    <p className={b(\"paragraph\")}>\n      Ще однією проблемою є високий рівень викидів газу.{\" \"}\n      <a\n        href={\"https://www.bristol247.com/news-and-features/news/step-towards-tackling-bristols-killer-air-pollution/\"}\n      >\n        За дослідженнями\n      </a>\n      , одна з десяти смертей у місті щороку може бути пов’язана із забрудненням повітря.\n    </p>{\" \"}\n    <p className={b(\"paragraph\")}>\n      Для збільшення швидкості пересування вже оновили два історичних мости і{\" \"}\n      <a href={\"https://www.volkerlaser.co.uk/en/case-studies/detail/bathurst-basin-bridge\"}>побудували</a> один новий.\n      Частину центру (The Centre) зробили пішохідною. У 2018 відкрили{\" \"}\n      <a href={\"https://en.wikipedia.org/wiki/MetroBus_(Bristol)\"}>мережу швидких автобусів Metrobus</a>. До неї входять\n      три маршрути. Мета цього проекту - заповнити діри, які не покривають автобусні та трамвайні лінії.\n    </p>{\" \"}\n    <p className={b(\"paragraph\")}>\n      Жителі міста{\" \"}\n      <a\n        href={\n          \"https://thebristolbugle.com/2018/07/28/bristol-could-have-its-own-teleportation-based-transport-system-within-the-next-700-years/\"\n        }\n      >\n        жартують\n      </a>\n      , що зараз у розробці новий транспортний проект - система телепортації. Її планують реалізувати за найближчі 700\n      років.\n    </p>{\" \"}\n  </section>\n)\n\nexport default Subchapter_2_1\n","import React from \"react\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\n\nconst b = BEM(\"Article\")\n\nconst Subchapter_2_2 = () => (\n  <section>\n    <h2>Львів</h2>\n    <p className={b(\"paragraph\")}>\n      Історію громадського транспорту Львова розпочав{\" \"}\n      <a href={\"https://uk.wikipedia.org/wiki/%D0%9E%D0%BC%D0%BD%D1%96%D0%B1%D1%83%D1%81\"}>омнібус</a>. Багатомісний\n      візок перевозив пасажирів із 1835 року. У 1880 на вулицях міста з’явився перший{\" \"}\n      <a\n        href={\n          \"https://uk.wikipedia.org/wiki/%D0%9B%D1%8C%D0%B2%D1%96%D0%B2%D1%81%D1%8C%D0%BA%D0%B8%D0%B9_%D1%82%D1%80%D0%B0%D0%BC%D0%B2%D0%B0%D0%B9#%D0%9A%D1%96%D0%BD%D0%BD%D0%B8%D0%B9_%D1%82%D1%80%D0%B0%D0%BC%D0%B2%D0%B0%D0%B9\"\n        }\n      >\n        кінний трамвай\n      </a>\n      . Темнокоричневі вагони курсували двома маршрутами: Залізничний вокзал - вул. Митна і Залізничний вокзал -\n      Підзамче.\n    </p>\n    <figure>\n      <img className={b(\"image\")} src={\"img/chapter2/lvivHorseTram.png\"} alt={\"Lviv Horse Tram\"} />\n      <figcaption className={b(\"image-caption\")}>\n        Закритий вагон кінного трамвая на площі Митній. (Фото з{\" \"}\n        <a\n          href={\n            \"https://uk.wikipedia.org/wiki/%D0%A4%D0%B0%D0%B9%D0%BB:%D0%9F%D0%BB%D0%BE%D1%89%D0%B0_%D0%BC%D0%B8%D1%82%D0%BD%D0%B0_2%D0%B0.jpg\"\n          }\n        >\n          Вікіпедії\n        </a>\n        )\n      </figcaption>\n    </figure>\n    <p className={b(\"paragraph\")}>\n      У кінці 19 століття конка не справлялась із потоком пасажирів. Тому в 1893 відбувся тендер на будівництво\n      електричних трамвайних ліній. У конкурсі перемогла німецька фірма{\" \"}\n      <a href={\"https://en.wikipedia.org/wiki/Siemens_%26_Halske\"}>Simens & Halske</a>. Компанія проклала 8.3 км\n      трамвайних ліній і побудувала на вул. Сахарова трамвайне депо з електростанцією. В 1894 році 16 трамваїв вперше\n      вийшли на маршрут.\n    </p>\n    <figure>\n      <img className={b(\"image\")} src={\"img/chapter2/lvivHalytskaSquare.png\"} alt={\"Lviv Halytska Square\"} />\n      <figcaption className={b(\"image-caption\")}>\n        Площа Галицька. Зліва припарковані карети-таксі. Попереду - кінний трамвай, а ззаду - новий електричний вагон.\n        Цікаво,{\" \"}\n        <a\n          href={\n            \"https://uk.wikipedia.org/wiki/%D0%9B%D1%96%D0%B2%D0%BE%D1%81%D1%82%D0%BE%D1%80%D0%BE%D0%BD%D0%BD%D1%96%D0%B9_%D1%80%D1%83%D1%85#%D0%9A%D1%80%D0%B0%D1%97%D0%BD%D0%B8,_%D1%89%D0%BE_%D0%B7%D0%BC%D1%96%D0%BD%D0%B8%D0%BB%D0%B8_%D0%BB%D1%96%D0%B2%D0%BE%D1%81%D1%82%D0%BE%D1%80%D0%BE%D0%BD%D0%BD%D1%96%D0%B9_%D1%80%D1%83%D1%85\"\n          }\n        >\n          що рух транспорту - лівосторонній\n        </a>\n        . Напрямок змінили на правосторонній лише в 1922 році.\n      </figcaption>\n    </figure>\n    <p className={b(\"paragraph\")}>\n      Вагони працювали і в час німецької окупації. Але на деяких був{\" \"}\n      <a href={\"http://tvoemisto.tv/exclusive/lvivskyy_gromadskyy_transport_istoriya_u_fotografiyah_93007.html\"}>\n        надпис\n      </a>{\" \"}\n      “Тільки для німців”. Причепними вагонами часом перевозили в’язнів. До середини ХХ століття трамвай залишався\n      основним транспортом міста. У 1928 році на вулицях з’явилися автобуси, а в 1952 році - тролейбуси.\n    </p>\n    <p className={b(\"paragraph\")}>\n      У 60-х роках виникла ідея будівництва{\" \"}\n      <a\n        href={\n          \"https://uk.wikipedia.org/wiki/%D0%9B%D1%8C%D0%B2%D1%96%D0%B2%D1%81%D1%8C%D0%BA%D0%B8%D0%B9_%D0%BF%D1%96%D0%B4%D0%B7%D0%B5%D0%BC%D0%BD%D0%B8%D0%B9_%D1%82%D1%80%D0%B0%D0%BC%D0%B2%D0%B0%D0%B9\"\n        }\n      >\n        підземного трамваю\n      </a>\n      . У проекті були три лінії. Перша - від вулиці Сахарова до Мечнікова. Друга - між вулицями Снопківська і\n      Гайдамацька. Останній тунель мав з’єднати північні райони із Новим Львовом і Сиховом.\n    </p>\n    <figure>\n      <img src=\"/img/chapter2/lvivMetro.svg\" alt={\"Lviv Metro\"} className={b(\"image\")} />\n      <figcaption className={b(\"image-caption\")}>Схема львівського підземного трамваю</figcaption>\n    </figure>\n    <p className={b(\"paragraph\")}>\n      У 1987 запрацювала наземна частина колії по вул. Княгині Ольги. Будівництво першої підземної станції почали за\n      палацом Потоцьких. Та ґрунт швидко почав просідати. На будівлі палацу виникла{\" \"}\n      <a href={\"https://intvua.com/news/society/1545305519-zherva-aviakatastrofi-ta-lvivskogo-metro-prolitayuchi.html\"}>\n        тріщина\n      </a>{\" \"}\n      шириною 30 сантиметрів. Роботу припинили, а викопану шахту залили бетоном. У 2008 ідея будівництва метро знову\n      з’явилася у <a href={\"https://www.city-adm.lviv.ua/lmr/images/stories/arhitect/123/01_genplan.pdf\"}>генплані</a>{\" \"}\n      міста, але до реалізації так і не дійшло.\n    </p>\n    <p className={b(\"paragraph\")}>\n      Про{\" \"}\n      <a\n        href={\n          \"http://tvoemisto.tv/exclusive/smilyve_rishennya_yak_shvydkisnyy_tramvay_mozhe_rozvantazhyty_lviv_92840.html\"\n        }\n      >\n        ідею будівництва львівського метро\n      </a>{\" \"}\n    </p>\n    <p className={b(\"paragraph\")}>\n      Про <a href={\"http://photo-lviv.in.ua/lvivski-tramvajni-depo-istoriya-i-suchasnist/\"}>історію львівських депо</a>\n    </p>\n    <p className={b(\"paragraph\")}>\n      У дев’яностих на дорогах Львова з’явилися{\" \"}\n      <a\n        href={\n          \"https://uk.wikipedia.org/wiki/%D0%9F%D0%B8%D0%B6%D0%B8%D0%BA_(%D0%BC%D0%B0%D1%80%D1%88%D1%80%D1%83%D1%82%D0%BD%D0%B5_%D1%82%D0%B0%D0%BA%D1%81%D1%96)\"\n        }\n      >\n        “пижики”\n      </a>\n      . Їх назва пішла від назви моделі - “Peugeot Karsan J9”. При розрахунку на 20 осіб, у години-пік у салоні\n      вміщалося до 50 пасажирів. Замість вирішення транспортної проблеми маленькі “Пижики” переповнили дороги і\n      спричинили затори.\n    </p>\n    <figure>\n      <img className={b(\"image\")} src={\"img/chapter2/lvivPyzhyk.png\"} alt={\"Lviv Pyzhyk\"} />\n      <figcaption className={b(\"image-caption\")}>\n        Peugeot Karsan J9 (фото з{\" \"}\n        <a href={\"https://commons.wikimedia.org/wiki/File:Peugeot_J9_Karsan_(1991-2006).jpg\"}>Вікіпедії</a>)\n      </figcaption>\n    </figure>\n    <p className={b(\"paragraph\")}>\n      На початку двохтисячних автомобілів у центрі стало ще більше. Люди потрапляли в корки, а транспорт відставав від\n      розкладу. У місті було шумно і загазовано. До Євро-2012 французька компанія{\" \"}\n      <a href={\"https://www.louisberger.com/\"}>Louis Berger</a> розпочала{\" \"}\n      <a href={\"https://zaxid.net/lvivskiy_transport_zmina_radikalna_ruh__radialniy_n1232279\"}>\n        реорганізацію транспортної системи\n      </a>\n      . Кошти для цього виділив ЄБРР.\n    </p>\n    <p className={b(\"paragraph\")}>\n      Однією з цілей проекту було полегшення руху в центрі. Тому до автобусних маршрутів додали шість радіальних ліній.\n      Їх кінцеві зупинки розташували навколо центральної частини міста : “Добробут”, вул. Підвальна, пл. Галицька і пр.\n      Свободи.\n    </p>\n    <img className={b(\"image\")} src={\"./img/chapter2/lvivCityCenter.png\"} alt={\"Lviv City Center\"} />\n    <p className={b(\"paragraph\")}>\n      Для поїздок між околицями запланували 40 хордових маршрутів. Із транспортної схеми зникли автобуси, що дублювали\n      шляхи електротранспорту. На автобусах встановили GPS пристрої. В кінці 2012 запрацював Центр управління дорожнім\n      рухом. Він контролює систему “розумних світлофорів” і відслідковує рух громадського транспорту. Почали з’являтися\n      велодоріжки. У 2013 центр Львова став пішохідним. Трамвайна мережа також зазнала змін: у 2016 відкрили швидкісну\n      лінію на Сихів.\n    </p>\n    <p className={b(\"paragraph\")}>\n      Щоб пришвидшити рух громадського транспорту, на проспекті Свободи, біля Привокзального ринку, на вул. Січових\n      Стрільців та вул. Мечникова облаштували окремі смуги для автобусів. Та вже з перших днів там почали паркувати\n      приватні автомобілі. Попри те, що проблему вирішили не до кінця, у міськраді планують облаштувати ще сім таких\n      смуг. Також влада працює над збільшенням кількості громадського транспорту. Пріоритет надають трамваю та\n      тролейбусу.\n    </p>\n  </section>\n)\n\nexport default Subchapter_2_2\n","import React from \"react\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport Subchapter1 from \"./Subchapter_2_1\"\nimport Subchapter2 from \"./Subchapter_2_2\"\nimport \"../Article.scss\"\n\nconst b = BEM(\"Article\")\n\nconst Chapter_2 = () => (\n  <section id={\"chapter2\"}>\n    <h1 className={b(\"header\")}>Історія двох міст</h1>\n    <em>\n      Для дослідження ми обрали транспортну мережу Львова. Її ще не аналізували у рамках теорії складних мереж.\n      Транспортну систему Львова було важливо порівняти із мережею схожого за розміром міста. Так ми обрали для аналізу\n      ще одне місто - Брістоль.\n    </em>\n    <Subchapter1 />\n    <Subchapter2 />\n  </section>\n)\n\nexport default Chapter_2\n","import React from \"react\"\nimport BEM from \"../../helpers/BEM.js\"\nimport \"./Article.scss\"\nimport Latex from \"react-latex\"\n\nconst b = BEM(\"Article\")\n\nconst Chapter_3 = () => (\n  <section id={\"chapter3\"}>\n    <h1 className={b(\"header\")}>Громадський транспорт як складна мережа</h1>\n    <p className={b(\"paragraph\")}>\n      Один із методів дослідження транспортних систем -{\" \"}\n      <a href={\"https://en.wikipedia.org/wiki/Complex_network\"}>теорія складних (комплексних) мереж</a>. У рамках цієї\n      теорії транспортну систему зображають як набір вершин (вузлів) і зв’язків між ними (ребер). Вершини та їхні\n      зв’язки формують мережу, іншими словами граф. Його властивості ми і будемо досліджувати.\n    </p>\n    <p className={b(\"paragraph\")}>\n      Існують різні варіанти відображення транспортної системи на графі. Ми будуємо граф у трьох відображеннях:{\" \"}\n      <Latex>$\\mathbb L$-space</Latex>, <Latex>$\\mathbb P$-space</Latex> i <Latex>$\\mathbb C$-space</Latex>.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        <Latex>$\\mathbb L$-space</Latex> (\"простір зупинок\")\n      </b>\n      . Позначмо кожну зупинку громадського транспорту, як вузол. А ребра слугуватимуть, як позначення маршрутів. Ось це\n      і називатиметься <Latex>$\\mathbb L$-space</Latex>. Як приклад, розглянемо частини львівських трамвайних маршрутів\n      №3 і №6 і №8:\n    </p>\n    <img className={b(\"image\")} alt={\"Transport schema\"} src={\"./img/chapter3/exampleTransportSchema.svg\"} />\n    <p className={b(\"paragraph\")}>\n      Їх зображення в <Latex>$\\mathbb L$</Latex>-space виглядатиме так:\n    </p>\n    <img className={b(\"image\")} alt={\"L-space\"} src={\"./img/chapter3/exampleLSpace.svg\"} />\n    <p className={b(\"paragraph\")}>\n      <b>\n        <Latex>$\\mathbb P$-space</Latex> (\"простір пересадок\")\n      </b>\n      . Побудуємо граф, подібний до попереднього (графа в <Latex>$\\mathbb L$-space</Latex>). Однак зараз вузли (зупинки)\n      будуть з’єднані, якщо вони належать до одного маршруту. Математичною мовою маршрути - це{\" \"}\n      <a href={\"https://uk.wikipedia.org/wiki/%D0%9F%D0%BE%D0%B2%D0%BD%D0%B8%D0%B9_%D0%B3%D1%80%D0%B0%D1%84\"}>\n        повні підграфи\n      </a>{\" \"}\n      транспортної системи\n    </p>\n    <img className={b(\"image\")} alt={\"P-space\"} src={\"./img/chapter3/examplepSpace.svg\"} />\n    <p className={b(\"paragraph\")}>\n      <b>\n        <Latex>$\\mathbb C$-space</Latex> (\"простір маршрутів\")\n      </b>\n      . Узагальнимо вигляд транспортної системи і позначимо вузлами маршрути. Ті маршрути, що перетинаються, з’єднаємо\n      ребром. Трамваї №3 та №8 мають спільні зупинки. Однак трамвай №6 повністю ізольований від них, а отже наш\n      <Latex>$\\mathbb C$-space</Latex> виглядатиме так:\n    </p>\n    <img className={b(\"image\", [\"small\"])} alt={\"C-space\"} src={\"./img/chapter3/exampleCSpace.svg\"} />\n  </section>\n)\n\nexport default Chapter_3\n","import React from \"react\"\nimport { compose, mapProps } from \"recompose\"\nimport { head, keys, map, mapObjIndexed, prop, values } from \"ramda\"\n\nimport BEM from \"../../helpers/BEM\"\nimport \"./CitiesInfoTable.scss\"\n\nconst b = BEM(\"CitiesInfoTable\")\n\nconst CitiesInfoTable = ({ data, cityNames, cityPropertiesKeys, cityPropertiesLabels }) => (\n  <table className={b()}>\n    <tbody>\n      <tr>\n        <th className={b(\"row-title\")}>City</th>\n        {map(\n          city => (\n            <td className={b(\"row-title\", [\"align-right\"])} key={city} style={{ color: data[city].color }}>\n              {city}\n            </td>\n          ),\n          cityNames\n        )}\n      </tr>\n      {map(\n        property => (\n          <tr key={property}>\n            <th className={b(\"row-property\")}>{cityPropertiesLabels[property]}</th>\n            {map(\n              city => (\n                <td key={city} className={b(\"row-value\")}>\n                  {data[city].data[property].propertyValue}\n                </td>\n              ),\n              cityNames\n            )}\n          </tr>\n        ),\n        cityPropertiesKeys\n      )}\n    </tbody>\n  </table>\n)\n\nconst enhancer = compose(\n  mapProps(({ data }) => ({\n    data,\n    cityNames: keys(data),\n    cityPropertiesLabels: compose(\n      mapObjIndexed(prop(\"propertyLabel\")),\n      prop(\"data\"),\n      head,\n      values\n    )(data),\n    cityPropertiesKeys: compose(\n      keys,\n      prop(\"data\"),\n      head,\n      values\n    )(data)\n  }))\n)\n\nexport default enhancer(CitiesInfoTable)\n","import React from \"react\"\nimport { Line, Point } from \"@vx/vx\"\nimport BEM from \"../../helpers/BEM\"\nconst b = BEM(\"RadarChart\")\n\nconst getAnchorDirection = x => (Math.abs(x) < 30 ? \"middle\" : x < 0 ? \"end\" : \"start\")\n\nexport const RadarRay = ({ rayLabel, targetPoint }) => (\n  <g>\n    {rayLabel && (\n      <text\n        textAnchor={getAnchorDirection(targetPoint.x)}\n        className={b(\"text\")}\n        //TODO: write prettier formulas, separate the logic\n        x={(targetPoint.x * 12) / 10 / 1.1}\n        y={targetPoint.y > 0 ? (targetPoint.y * 12) / 10 : (targetPoint.y * 12) / 10 / 1.1}\n      >\n        {rayLabel}\n      </text>\n    )}\n    <Line className={b(\"line-radial\")} from={new Point({ x: 0, y: 0 })} to={targetPoint} />\n  </g>\n)\n\nexport default RadarRay\n","import React from \"react\"\nimport { withProps } from \"recompose\"\nimport { reduce } from \"ramda\"\nimport BEM from \"../../helpers/BEM\"\nconst b = BEM(\"RadarChart\")\n\nexport const RadarPolygon = ({ polygonPoints, color = \"gray\" }) => (\n  <polygon fill={color} stroke={color} points={polygonPoints} className={b(\"polygon\")} />\n)\n\nexport default withProps(({ polygonPointsList }) => ({\n  polygonPoints: reduce((acc, { x, y }) => (x && y ? acc + `${x},${y} ` : acc), \"\", polygonPointsList)\n}))(RadarPolygon)\n","import React from \"react\"\nimport { Group, scaleLinear } from \"@vx/vx\"\nimport { compose, defaultProps, withProps } from \"recompose\"\nimport { maxBy, prop, values, map, reduce, pathOr, filter, mapObjIndexed, head } from \"ramda\"\nimport RadarRay from \"./RadarRay\"\nimport RadarPolygon from \"./RadarPolygon\"\nimport \"./RadarChart.scss\"\nimport BEM from \"../../helpers/BEM\"\n\nconst b = BEM(\"RadarChart\")\nconst RADAR_CIRCLE_RADIUS = 4\n\nconst getStepAlongCircle = dataLength => (Math.PI * 2) / dataLength\n\nconst genRadarRaysPoints = (data, radius) =>\n  data.map((_, i) => ({\n    x: radius * Math.sin(i * getStepAlongCircle(data.length)),\n    y: radius * Math.cos(i * getStepAlongCircle(data.length))\n  }))\n\nconst genRadarPolygonPoints = (data, scale) =>\n  data.map(({ propertyValue }, i) => ({\n    x: scale(propertyValue) * Math.sin((i + 0.01) * getStepAlongCircle(data.length)),\n    y: scale(propertyValue) * Math.cos((i + 0.01) * getStepAlongCircle(data.length))\n  }))\n\nexport const RadarChart = ({ width, height, raysPoints, polygonData, cityPropertiesLabels }) => (\n  <svg className={b()}>\n    {console.log(\"polygonData ==> \", polygonData)}\n    {console.log(\"raysPoints ==> \", raysPoints)}\n    {console.log(\"cityPropertiesLabels ==> \", cityPropertiesLabels)}\n    <Group className={b(\"container\")} width={width} height={height}>\n      {raysPoints.map((point, i) => (\n        <RadarRay rayLabel={cityPropertiesLabels[i]} targetPoint={point} key={i} />\n      ))}\n      {polygonData.map(({ color, data }, i) => (\n        <Group key={i}>\n          <RadarPolygon color={color} polygonPointsList={data} />\n          {data.map(({ x, y }) => (\n            <circle fill={color} key={`${x},${y}`} cx={x} cy={y} r={RADAR_CIRCLE_RADIUS} className={b(\"circle\")} />\n          ))}\n        </Group>\n      ))}\n    </Group>\n  </svg>\n)\n\nexport default compose(\n  defaultProps({\n    width: 350,\n    height: 350,\n    margin: {\n      top: 90,\n      left: 0,\n      right: 0,\n      bottom: 90\n    }\n  }),\n  withProps(({ width, height, margin: { top, bottom }, data }) => ({\n    radius: (width - top - bottom) / 2,\n    yScale: scaleLinear({\n      range: [0, (height - top - bottom) / 2],\n      domain: [0, 1]\n    }),\n    cityPropertiesLabels: compose(\n      data => data.map(prop(\"propertyLabel\")),\n      values,\n      prop(\"data\"),\n      head,\n      values\n    )(data)\n  })),\n  withProps(({ data }) => ({\n    data: compose(\n      mapObjIndexed(city => ({\n        ...city,\n        data: mapObjIndexed(({ propertyValue, ...rest }, propertyKey) => ({\n          ...rest,\n          propertyValue:\n            propertyValue /\n            reduce(maxBy(pathOr(0, [\"data\", propertyKey, \"propertyValue\"])), 0, values(data))[\"data\"][propertyKey][\n              \"propertyValue\"\n            ]\n        }))(city.data)\n      }))\n    )(data)\n  })),\n  withProps(({ radius, data, yScale, maxPropertyValues, cityPropertiesLabels }) => ({\n    raysPoints: genRadarRaysPoints(cityPropertiesLabels, radius),\n    polygonData: compose(\n      map(city => ({ ...city, data: genRadarPolygonPoints(values(prop(\"data\", city)), yScale) })),\n      filter(prop(\"active\")),\n      values\n    )(data)\n  }))\n)(RadarChart)\n","import React from \"react\"\nimport \"./CitySwitcher.scss\"\nimport BEM from \"../../helpers/BEM\"\nimport { withHandlers } from \"recompose\"\nimport { keys, map, compose } from \"ramda\"\n\nconst b = BEM(\"CitySwitcher\")\n\nexport const CitySwitcher = ({ handleChange, data }) => (\n  <form className={b()}>\n    {map(\n      city => (\n        <label key={city} className={b(\"city-checkbox\")} style={{ color: data[city].color }}>\n          <input\n            type={\"checkbox\"}\n            checked={data[city].active}\n            onChange={ev => handleChange && handleChange(ev, city)}\n          />\n          {data[city][\"cityLabel\"]}\n        </label>\n      ),\n      keys(data)\n    )}\n  </form>\n)\n\nconst enhancer = compose(\n  withHandlers({\n    handleChange: ({ changeDisplayedCities }) => (ev, city) => {\n      changeDisplayedCities(city, ev.target.checked)\n    }\n  })\n)\n\nexport default enhancer(CitySwitcher)\n","import React from \"react\"\nimport DataTable from \"../CitiesInfoTable\"\nimport RadarChart from \"../RadarChart\"\nimport CitySwitcher from \"../CitySwitcher\"\nimport { compose, withStateHandlers, branch, mapPropsStream, renderComponent } from \"recompose\"\nimport { ajax } from \"rxjs/ajax\"\nimport { combineLatest } from \"rxjs\"\nimport { map } from \"rxjs/operators\"\nimport { mapObjIndexed, equals } from \"ramda\"\nimport BEM from \"../../helpers/BEM\"\nimport \"./CitiesInfoBlock.scss\"\n\nconst b = BEM(\"CitiesInfoBlock\")\n\nconst CitiesInfoBlock = ({ data, changeDisplayedCities }) => (\n  <div className={b()}>\n    <DataTable data={data} />\n    <CitySwitcher data={data} changeDisplayedCities={changeDisplayedCities} />\n    <RadarChart data={data} />\n  </div>\n)\n\nexport default compose(\n  mapPropsStream(props$ =>\n    combineLatest(props$, ajax.getJSON(\"/data/cities.json\")).pipe(map(([props, data]) => ({ ...props, data })))\n  ),\n  branch(({ data }) => !data, renderComponent(() => \"Loading the data...\")),\n  withStateHandlers(\n    ({ data }) => ({\n      data: mapObjIndexed(city => ({ ...city, active: true }))(data)\n    }),\n    {\n      changeDisplayedCities: ({ data }) => (cityName, isChecked) => ({\n        data: mapObjIndexed((city, cityKey) => (equals(cityKey, cityName) ? { ...city, active: isChecked } : city))(\n          data\n        )\n      })\n    }\n  )\n)(CitiesInfoBlock)\n","import { compose, includes, map } from \"ramda\"\nimport { withHandlers, withProps } from \"recompose\"\nimport React from \"react\"\nimport BEM from \"../../helpers/BEM\"\nimport \"./TransportTypeSwitcher.scss\"\n\nconst b = BEM(\"TransportTypeSwitcher\")\n\nconst TransportTypeSwitcher = ({ handleChange, selectedTransportTypes, stationTypes }) => (\n  <form className={b()}>\n    {map(\n      label => (\n        <label key={label} className={b(\"transportType\")}>\n          <input\n            type={\"checkbox\"}\n            name={label}\n            onChange={ev => handleChange(ev)}\n            checked={includes(label, selectedTransportTypes)}\n          />\n          {label}\n        </label>\n      ),\n      stationTypes\n    )}\n  </form>\n)\n\nconst enhancer = compose(\n  withProps(({ city, stationTypes }) => ({ city, labels: stationTypes })),\n  withHandlers({\n    handleChange: ({ handleSelect }) => ({ target }) => handleSelect(target.name, target.checked)\n  })\n)\n\nexport default enhancer(TransportTypeSwitcher)\n","// @flow\nimport { addIndex, append, assoc, clone, curry, map, reduce, without } from \"ramda\"\nimport { featureCollection } from \"@turf/helpers\"\n\nexport const mapIndexed = addIndex(map)\n\nexport const arrayToObject = curry(\n  (keyFn: Function, array: []): {} =>\n    reduce((obj: {}, item: {}): {} => {\n      obj[keyFn(item)] = item //this is mutable due to performance\n      return obj\n    }, {})(array)\n)\n\nconst replaceConnectionsInNode = (from: string, to: string, node: {}): {} =>\n  assoc(\"connections\", append(to, without([from], node.connections)), node)\n\n/* Important!!! Be careful, mutable. */\nconst DANGEROUSLY_removeNodeFromGraph = (nodeId: string, graph: {}) => {\n  const [first, second] = graph[nodeId].connections\n  graph[first] = replaceConnectionsInNode(nodeId, second, graph[first])\n  graph[second] = replaceConnectionsInNode(nodeId, first, graph[second])\n\n  delete graph[nodeId]\n}\n\ntype _removeNodeListFromGraph = <G>([any], G) => G\nexport const removeNodeListFromGraph: _removeNodeListFromGraph = (arrayOfNodes, graph) => {\n  const graphClone = clone(graph)\n  arrayOfNodes.forEach(node => DANGEROUSLY_removeNodeFromGraph(node, graphClone))\n  return graphClone\n}\nexport const convertBusStopsDataToGeoJSON = data =>\n  featureCollection(\n    data.map(({ lat, lon, ...rest }) => ({\n      type: \"Feature\",\n      properties: { lat, lon, ...rest, connectedRoutes: 1 }, //TODO: experiment with routes\n      geometry: { type: \"Point\", coordinates: [lon, lat] }\n    }))\n  )\n\nexport const convertBusStopsGeoJSONToJson = geoJSONStops => geoJSONStops.features.map(stop => stop.properties)\n","import { gql } from \"apollo-boost\"\n\nexport const getStopsQuery = gql`\n  query Stops($city: String!) {\n    stops(city: $city) {\n      id\n      lat\n      lon\n      routes\n      stationType\n      connections\n    }\n    stationTypes(city: $city)\n  }\n`\n\nexport const getStationTypesQuery = gql`\n  query StationTypes($city: String!) {\n    stationTypes(city: $city)\n  }\n`\n","// @flow\nimport { getStationTypesQuery, getStopsQuery } from \"../api\"\nimport {\n  FETCH_STATION_TYPES_ERROR,\n  FETCH_STATION_TYPES_START,\n  FETCH_STATION_TYPES_SUCCESS,\n  FETCH_STOPS_ERROR,\n  FETCH_STOPS_START,\n  FETCH_STOPS_SUCCESS\n} from \"./actionTypes\"\nimport {client} from '../components/Root'\nexport const fetchStopsStart = (city) => ({ type: FETCH_STOPS_START, city })\nexport const fetchStopsSuccess = (city, stops) => ({ type: FETCH_STOPS_SUCCESS, city, stops })\nexport const fetchStopsError = (city, error: string) => ({ type: FETCH_STOPS_ERROR, city, error })\n\nexport const fetchStops = (city:string) => async (dispatch:function) => {\n  dispatch(fetchStopsStart(city))\n  try {\n    const response = await client.query({query: getStopsQuery, variables: { city: city }})\n    if (!response.error) {\n      dispatch(fetchStopsSuccess(city, response.data.stops))\n    } else {\n      dispatch(fetchStopsError(response.error))\n    }\n  } catch (e) {\n    dispatch(fetchStopsError(e))\n  }\n}\n\nexport const fetchStationTypesStart = (city) => ({ type: FETCH_STATION_TYPES_START, city })\nexport const fetchStationTypesSuccess = (city, stationTypes) => ({ type: FETCH_STATION_TYPES_SUCCESS, city, stationTypes })\nexport const fetchStationTypesError = (city, error: string) => ({ type: FETCH_STATION_TYPES_ERROR, city, error })\n\nexport const fetchStationTypes = (city:string) => async (dispatch:function) => {\n  dispatch(fetchStationTypesStart(city))\n  try {\n    const response = await client.query({query: getStationTypesQuery, variables: { city: city }})\n    if (!response.error) {\n      dispatch(fetchStationTypesSuccess(city, response.data.stationTypes))\n    } else {\n      dispatch(fetchStationTypesError(response.error))\n    }\n  } catch (e) {\n    dispatch(fetchStationTypesError(e))\n  }\n}\n","import { renameProps, withProps, compose, branch, renderComponent } from \"recompose\"\nimport { withParentSize } from \"@vx/responsive\"\nimport { connect } from \"react-redux\"\nimport { areStationTypesFetching, areStopsFetching, getStationTypes, getStops } from \"../reducers\"\nimport { fetchStationTypes, fetchStops } from \"../actions\"\nimport { arrayToObject, mapIndexed } from \"../helpers\"\nimport { assoc, flip, prop } from \"ramda\"\n\nexport const withCalculatedChartSize = compose(\n  withParentSize,\n  renameProps({ parentHeight: \"height\", parentWidth: \"width\" }),\n  withProps(({ width, height, margin }) => ({\n    chartWidth: width - (margin.left + margin.right),\n    chartHeight: height - (margin.top + margin.bottom)\n  }))\n)\n\nexport const withStationTypes = compose(\n  connect(\n    (state, { city }) => ({\n      stationTypes: getStationTypes(state, city),\n      areStationTypesFetching: areStationTypesFetching(state, city)\n    }),\n    { fetchStationTypes }\n  ),\n  withProps(\n    ({ stationTypes, areStationTypesFetching, fetchStationTypes, city }) =>\n      !stationTypes && !areStationTypesFetching && fetchStationTypes(city)\n  ),\n  branch(({ areStationTypesFetching }) => areStationTypesFetching, renderComponent(() => \"Loading the data...\")),\n  branch(\n    ({ stationTypes, areStationTypesFetching }) => !stationTypes && !areStationTypesFetching,\n    renderComponent(() => \"Something went wrong. We didn`t manage to load the data...\")\n  )\n)\nexport const withStops = compose(\n  connect(\n    (state, { city }) => ({\n      stops: getStops(state, city),\n      areStopsFetching: areStopsFetching(state, city)\n    }),\n    { fetchStops }\n  ),\n  withProps(({ stops, areDataFetching, fetchStops, city }) => !stops && !areDataFetching && fetchStops(city)),\n  branch(({ areStopsFetching }) => areStopsFetching, renderComponent(() => \"Loading the data...\")),\n  branch(\n    ({ stops, areStopsFetching }) => !stops && !areStopsFetching,\n    renderComponent(() => \"Something went wrong. We didn`t manage to load the data...\")\n  )\n)\n\nexport const withIndexedStops = withProps(({ stops }) => ({\n  stops: compose(\n    arrayToObject(prop(\"id\")),\n    mapIndexed(flip(assoc(\"index\")))\n  )(stops)\n}))\n","import React, { useEffect, useRef, useState } from \"react\"\nimport WebMercatorViewport from \"viewport-mercator-project\"\nimport { withParentSize } from \"@vx/responsive\"\nimport { bbox, clustersDbscan, center, featureCollection, point } from \"@turf/turf\"\nimport { groupBy, reduce, filter, isEmpty, intersection, equals, append } from \"ramda\"\nimport { combineLatest } from \"rxjs\"\nimport { map, startWith } from \"rxjs/operators\"\nimport { compose, mapPropsStream, withProps, withStateHandlers } from \"recompose\"\nimport MapGL from \"react-map-gl\"\nimport TransportTypeSwitcher from \"./TransportTypeSwitcher\"\nimport { getHeatMapColorConfig } from \"./helpers\"\nimport BEM from \"../../helpers/BEM\"\nimport { convertBusStopsDataToGeoJSON } from \"../../helpers\"\nimport { withStationTypes, withStops } from \"../HOC\"\n\nimport \"./HeatMap.scss\"\n\nconst b = BEM(\"HeatMap\")\n\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN\nconst HEATMAP_SOURCE_ID = \"bus-stops\"\nconst MAX_MAP_ZOOM_LEVEL = 15\n\nconst HeatMap = ({ data, initialViewport, handleSelect, selectedStationTypes, stationTypes }) => {\n  const [viewport, setViewport] = useState(initialViewport)\n\n  const mapRef = useRef()\n  const getMap = () => (mapRef.current ? mapRef.current.getMap() : null)\n\n  const onViewportChange = viewport => setViewport(viewport)\n\n  useEffect(() => {\n    const map = getMap()\n    if (map.getSource(HEATMAP_SOURCE_ID)) {\n      map.getSource(HEATMAP_SOURCE_ID).setData(data)\n    }\n  })\n\n  const handleMapLoaded = async () => {\n    const map = getMap()\n    const geoJSON = data\n    map.addSource(HEATMAP_SOURCE_ID, { type: \"geojson\", data: geoJSON })\n    map.addLayer({\n      id: \"heatmap-layer\",\n      source: HEATMAP_SOURCE_ID,\n      type: \"heatmap\",\n      paint: getHeatMapColorConfig(MAX_MAP_ZOOM_LEVEL)\n    })\n  }\n\n  return (\n    <span className={b()}>\n      <MapGL\n        ref={mapRef}\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n        onViewportChange={onViewportChange}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        onLoad={handleMapLoaded}\n      />\n      <TransportTypeSwitcher\n        city={\"lviv\"}\n        handleSelect={handleSelect}\n        stationTypes={stationTypes}\n        selectedTransportTypes={selectedStationTypes}\n      />\n    </span>\n  )\n}\n\nconst enhancer = compose(\n  withStops,\n  withStationTypes,\n  withParentSize,\n  withProps(({ stops, parentHeight, parentWidth }) => {\n    const [minX, minY, maxX, maxY] = bbox(convertBusStopsDataToGeoJSON(stops))\n    const { longitude, latitude, zoom } = new WebMercatorViewport({\n      width: parentWidth,\n      height: parentHeight\n    }).fitBounds([[minX, minY], [maxX, maxY]], { padding: 20 })\n    return {\n      initialViewport: { longitude, latitude, zoom }\n    }\n  }),\n  withStateHandlers(\n    ({ stationTypes }) => ({\n      selectedStationTypes: stationTypes ? stationTypes : []\n    }),\n    {\n      handleSelect: ({ selectedStationTypes }) => (transportType, isSelected) => ({\n        selectedStationTypes: isSelected\n          ? append(transportType, selectedStationTypes)\n          : filter(n => !equals(transportType, n), selectedStationTypes)\n      })\n    }\n  ),\n  withProps(({ stops, stationTypes, selectedStationTypes }) => ({\n    stops: !isEmpty(selectedStationTypes)\n      ? filter(n => !isEmpty(intersection(n.stationType, selectedStationTypes)), stops)\n      : []\n  })),\n  mapPropsStream(props$ => {\n    const data$ = props$.pipe(\n      map(({ stops }) => convertBusStopsDataToGeoJSON(stops)),\n      map(data => clustersDbscan(data, 0.03, { mutate: true, minPoints: 2 })),\n      map(({ features }) =>\n        compose(\n          featureCollection,\n          ({ unclustered, ...clusters }) =>\n            unclustered\n              ? [\n                  ...unclustered,\n                  ...reduce(\n                    (accum, cluster) => [\n                      ...accum,\n                      center(featureCollection(cluster.map(p => point(p.geometry.coordinates))))\n                    ],\n                    [],\n                    Object.values(clusters)\n                  ).map(point => ({ ...point, properties: { connectedRoutes: 1 } }))\n                ]\n              : [],\n          groupBy(point => (point.properties.cluster ? point.properties.cluster : \"unclustered\"))\n        )(features)\n      ),\n      startWith(null)\n    )\n    return combineLatest(props$, data$).pipe(map(([props, data]) => ({ ...props, data })))\n  })\n)\n\nexport default enhancer(HeatMap)\n","export const getHeatMapColorConfig = maxZoomLevel => ({\n  // Increase the heatmap weight based on frequency and property magnitude\n  \"heatmap-weight\": [\"interpolate\", [\"linear\"], [\"get\", \"connectedRoutes\"], 0, 0, maxZoomLevel, 1],\n  // Increase the heatmap color weight weight by zoom level\n  // heatmap-intensity is a multiplier on top of heatmap-weight\n  \"heatmap-intensity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 1, 1, 15],\n  // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n  // Begin color ramp at 0-stop with a 0-transparancy color\n  // to create a blur-like effect.\n  \"heatmap-color\": [\n    \"interpolate\",\n    [\"linear\"],\n    [\"heatmap-density\"],\n    0,\n    \"rgba(33,102,172,0)\",\n    0.2,\n    \"rgb(103,169,207)\",\n    0.4,\n    \"rgb(209,229,240)\",\n    0.6,\n    \"rgb(253,219,199)\",\n    0.8,\n    \"rgb(239,138,98)\",\n    1,\n    \"rgb(178,24,43)\"\n  ],\n  // Adjust the heatmap radius by zoom level\n  \"heatmap-radius\": [\"interpolate\", [\"linear\"], [\"zoom\"], 0, 2, maxZoomLevel, 20],\n  // Transition from heatmap to circle layer by zoom level\n  \"heatmap-opacity\": [\"interpolate\", [\"linear\"], [\"zoom\"], 5, 1, maxZoomLevel, 1]\n})\n","import React from \"react\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\nimport HeatMap from \"../../HeatMap/HeatMap\"\n\nconst b = BEM(\"Article\")\n\nconst Subchapter_4_1 = () => (\n  <section>\n    <div className={b(\"illustration\", [\"sticky\"])} style={{ height: \"180vh\" }}>\n      <div style={{ height: \"90vh\" }}>\n        <HeatMap city={\"lviv\"} />\n      </div>\n      <div style={{ height: \"90vh\" }}>\n        <HeatMap city={\"bristol\"} />\n      </div>\n    </div>\n    <h1 className={b(\"header\")}>Обробка даних</h1>\n    <p className={b(\"paragraph\")}>\n      Для дослідження ми обрали дві системи громадського транспорту: львівську і брістольську. Датасети для Брістоля та\n      його околиць за 2011 рік взято із{\" \"}\n      <a href={\"http://data.gov.uk/dataset/nptdr\"}>National Transport Data Repository</a>. Дані для Львова за 2018 рік -\n      із системи <a href={\"http://ua-gis.com/\"}>UA-Gis Track</a> і сервісу{\" \"}\n      <a href={\"http://lviv-transport.online/?fbclid=IwAR1uUvz7IDFgtc4TxBiByB4w7JqW-Ou45sGPCnopI8q1Acn1FP5LrfPp1dg\"}>\n        Lviv Transport Online\n      </a>\n      .\n    </p>\n    <p className={b(\"paragraph\")}>\n      Для початку ми відкидаємо зупинки, що знаходяться поза офіційними межами{\" \"}\n      <a href={\"https://www.openstreetmap.org/relation/2108752#map=11/49.8482/24.0099\"}>Львова</a> і{\" \"}\n      <a href={\"https://www.openstreetmap.org/relation/57539#map=11/51.4326/-2.7287\"}>Брістоля</a>.\n    </p>\n    <figure>\n      <img src=\"./img/chapter4/lvivBoundaries.png\" className={b(\"image\")} alt={\"Lviv Boundaries\"} />\n      <img src=\"./img/chapter4/bristolBoundaries.png\" className={b(\"image\")} alt={\"Bristol Boundaries\"} />\n      <figcaption className={b(\"image-caption\")}>Межі Львова та Брістоля</figcaption>\n    </figure>\n    <p>Так ми зможемо порівняти дві міські транспортні мережі між собою:</p>\n  </section>\n)\n\nexport default Subchapter_4_1\n","import React from \"react\"\nimport Latex from \"react-latex\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\n\nconst b = BEM(\"Article\")\n\nconst Subchapter_4_2 = () => (\n  <section>\n    <p className={b(\"paragraph\")}>\n      Наша мета - дослідити структуру транспортної мережі. Дізнатися, наскільки вона зв’язна і стійка, скільки є великих\n      зупинок, які зупинки найбільш важливі для роботи системи. Ми не вивчатимемо руху транспорту чи пасажиропотоків.\n      Тому транспортні дані можна спростити (кроки відображені на ілюстрації):\n    </p>\n    <ol>\n      <li>\n        З’єднаємо зупинки, які знаходяться в радіусі <Latex>$R=40$м</Latex> одна від одної. На перехід між ними пасажир\n        витрачає менше одної хвилини. Для цього використаємо алгоритм кластеризації{\" \"}\n        <a href={\"https://uk.wikipedia.org/wiki/DBSCAN\"}>DBSCAN</a>. (*Кластеризація зупинок використовується лише в{\" \"}\n        <Latex>$\\mathbb L$-space</Latex> - \"просторі зупинок\". <Latex>$\\mathbb P$-</Latex> і{\" \"}\n        <Latex>$\\mathbb C$-space</Latex> важливі для аналізу кількості пересадок і зв'язків між маршрутами. Тому в цих\n        відображеннях кластеризацію не застосовуємо.)\n      </li>\n      <li>Відкинемо позначення напрямків маршрутів</li>\n      <li>Якщо між двома зупинками є декілька зв’язків, залишаємо лише один</li>\n    </ol>\n    <div className={b(\"illustration\", [\"wide\"])} style={{ height: \"100vh\" }}>\n      <figure>\n        <img alt={\"Network simplification steps\"} src={\"./img/chapter3/networkSimplificationSteps.svg\"} />\n        <figcaption className={b(\"image-caption\")}>Кроки для спрощення транспортної системи</figcaption>\n      </figure>\n    </div>\n    <p className={b(\"paragraph\")}>\n      Зі спрощених транспортних даних побудуємо <Latex>$\\mathbb L$-space</Latex>, <Latex>$\\mathbb P$-space</Latex> i{\" \"}\n      <Latex>$\\mathbb C$-space</Latex>.\n    </p>\n    Попередні дослідження Брістоля в <Latex>$\\mathbb L$-space</Latex>{\" \"}\n    <a href={\"https://arxiv.org/pdf/1705.07266.pdf\"}>\"Public transportation in UK viewed as a complex network\"</a>\n  </section>\n)\n\nexport default Subchapter_4_2\n","import React from \"react\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport CitiesInfoBlock from \"../../CitiesInfoBlock\"\nimport Subchapter1 from \"./Subchapter_4_1\"\nimport Subchapter2 from \"./Subchapter_4_2\"\nimport \"../Article.scss\"\n\nconst b = BEM(\"Article\")\n\nconst Chapter_4 = () => (\n  <section id={\"chapter4\"}>\n    <Subchapter1 />\n    <div className={b(\"illustration\", [\"wide\"])} style={{ height: \"90vh\" }}>\n      <CitiesInfoBlock />\n    </div>\n    <Subchapter2 />\n  </section>\n)\n\nexport default Chapter_4\n","import { flatten, indexOf, map, prop, values } from \"ramda\"\n\nimport {\n  forceCenter,\n  forceCollide,\n  forceLink,\n  forceManyBody,\n  forceSimulation,\n  forceX,\n  forceY,\n  scaleLinear,\n  scaleSequential,\n  drag,\n  event,\n  interpolatePlasma,\n  forceRadial,\n  scaleThreshold\n} from \"d3\"\nimport { mapIndexed } from \"../../helpers\"\nimport { compose } from \"recompose\"\n\nconst STRENGTH = 0.1\n\nconst MIN_NODE_SPACE = 2\nconst MAX_NODE_SPACE = 35\nconst MIN_NODE_RADIUS = 2\nconst MAX_NODE_RADIUS = 12\nconst MIN_FONT_SIZE = 0.5\nconst MAX_FONT_SIZE = 1\n\nconst MIN_RADIAL_NODE_SPACE = 3\nconst MAX_RADIAL_NODE_SPACE = 12\nconst MIN_RADIAL_NODE_RADIUS = 2\nconst MAX_RADIAL_NODE_RADIUS = 10\n\n\nconst nodeSpaceRadiusScale = scaleLinear().range([MIN_NODE_SPACE, MAX_NODE_SPACE])\nconst nodeRadiusScale = scaleLinear().range([MIN_NODE_RADIUS, MAX_NODE_RADIUS])\nconst fontSizeScale = scaleLinear().range([MIN_FONT_SIZE, MAX_FONT_SIZE])\nconst colorScale = scaleSequential(interpolatePlasma)\n\nconst radialNodeSpaceRadiusScale = scaleLinear().range([MIN_RADIAL_NODE_SPACE, MAX_RADIAL_NODE_SPACE])\nconst radialNodeRadiusScale = scaleLinear().range([MIN_RADIAL_NODE_RADIUS, MAX_RADIAL_NODE_RADIUS])\nconst radialColorScale = scaleSequential(interpolatePlasma)\nconst radialPositionScale = scaleThreshold().range([250, 180, 120, 70, 10])\n\n\nexport const getDefaultSpaceGraphScales = connectionsDomain => ({\n  nodeRadiusScale: nodeRadiusScale.copy().domain(connectionsDomain),\n  nodeSpaceRadiusScale: nodeSpaceRadiusScale.copy().domain(connectionsDomain),\n  colorScale: colorScale.copy().domain(connectionsDomain),\n  fontSizeScale: fontSizeScale.copy().domain(connectionsDomain)\n})\n\nexport const getRadialSpaceGraphScales = connectionsDomain => ({\n  nodeRadiusScale: radialNodeRadiusScale.copy().domain(connectionsDomain),\n  nodeSpaceRadiusScale: radialNodeSpaceRadiusScale.copy().domain(connectionsDomain),\n  colorScale: radialColorScale.copy().domain(connectionsDomain),\n  positionScale: radialPositionScale.copy().domain([2, 4, 5, 7])\n})\n\n\n\nexport const getForceSimulation = (chartWidth:number, chartHeight:number, nodeSpaceRadiusScale:function):object =>\n  forceSimulation()\n    .force(\n      \"link\",\n      forceLink()\n        .id(prop(\"index\"))\n        .strength(STRENGTH*2)\n    )\n    .force(\"collide\", forceCollide(({ r }) => nodeSpaceRadiusScale(r)).strength(STRENGTH))\n    .force(\"charge\", forceManyBody())\n    .force(\"center\", forceCenter(chartWidth / 2, chartHeight / 2))\n    .force(\"y\", forceY(chartHeight / 2).strength(STRENGTH*2))\n    .force(\"x\", forceX(chartWidth / 2).strength(STRENGTH*2))\n\n\nexport const getRadialForceSimulation = (chartWidth:number, chartHeight:number, nodeSpaceRadiusScale:function, positionScale:function):object =>\n  forceSimulation()\n    .force(\n      \"link\",\n      forceLink()\n        .id(prop(\"index\"))\n        .strength(STRENGTH/2)\n    )\n    .force(\"charge\", forceCollide().radius(d => nodeSpaceRadiusScale(d.connections.length)).strength(0.6))\n    .force(\n      \"r\",\n      forceRadial(d => positionScale(d.connections.length))\n        .x(chartWidth/2)\n        .y(chartHeight/2)\n        .strength(1)\n    )\n\n\nexport const prepareDataForGraphSpaceVisualization = (data) => {\n  const graphData = data\n  const nodeIds = Object.keys(graphData)\n  return {\n    nodes: map(d => ({ ...d, r: d.connections.length }), values(graphData)),\n    links: compose(\n      flatten,\n      mapIndexed(({ connections }, index) =>\n        map(connection => ({ source: index, target: indexOf(connection, nodeIds) }), connections)\n      ),\n      values\n    )(graphData)\n  }\n}\n\nexport const getDragHandler = (simulation:object):function =>\n  drag()\n    .on(\"start\", d => {\n      if (!event.active) simulation.alphaTarget(0.3).restart()\n      d.fx = d.x\n      d.fy = d.y\n    })\n    .on(\"drag\", d => {\n      d.fx = event.x\n      d.fy = event.y\n    })\n    .on(\"end\", d => {\n      if (!event.active) simulation.alphaTarget(0)\n      d.fx = null\n      d.fy = null\n    })\n\n\n","// @flow\nimport React, { useEffect, useRef } from \"react\"\nimport { path, map, values, filter } from \"ramda\"\nimport { extent, select } from \"d3\"\nimport { compose, defaultProps, withProps, withStateHandlers } from \"recompose\"\nimport {\n  getForceSimulation,\n  getDefaultSpaceGraphScales,\n  getDragHandler,\n  getRadialSpaceGraphScales,\n  getRadialForceSimulation,\n  prepareDataForGraphSpaceVisualization\n} from \"./helpers\"\nimport { removeNodeListFromGraph } from \"../../helpers\"\nimport { withCalculatedChartSize, withIndexedStops, withStops } from \"../HOC\"\nimport BEM from \"../../helpers/BEM\"\nimport \"./ForceGraph.scss\"\nconst b = BEM(\"ForceGraph\")\n\n//TODO: decide whether to add clusterization\nconst drawChart = compose(\n  defaultProps({\n    margin: { top: 0, left: 0, bottom: 100, right: 0 }\n  }),\n  // chart size definition\n  withCalculatedChartSize,\n  withStateHandlers(\n    ({ isRadial }) => ({\n      isRadial: isRadial\n    }),\n    {\n      setIsRadial: () => ev => ({\n        isRadial: ev.target.checked\n      })\n    }\n  ),\n  withProps(({ chartWidth, chartHeight, graphData, isRadial }) => {\n    const connectionsDomain = extent(graphData.nodes, path([\"connections\", \"length\"]))\n    const { nodeRadiusScale, nodeSpaceRadiusScale, positionScale, colorScale, fontSizeScale } = isRadial\n      ? getRadialSpaceGraphScales(connectionsDomain)\n      : getDefaultSpaceGraphScales(connectionsDomain)\n\n    return {\n      nodeRadiusScale,\n      nodeSpaceRadiusScale,\n      positionScale,\n      colorScale,\n      fontSizeScale,\n      simulation: isRadial\n        ? getRadialForceSimulation(chartWidth, chartHeight, nodeSpaceRadiusScale, positionScale)\n        : getForceSimulation(chartWidth, chartHeight, nodeSpaceRadiusScale, positionScale)\n    }\n  }),\n  withProps(\n    ({\n      chartWidth,\n      chartHeight,\n      graphData,\n      showLabels,\n      simulation,\n      nodeSpaceRadiusScale,\n      nodeRadiusScale,\n      positionScale,\n      colorScale\n    }) => ({\n      drawChart: rootEl => {\n        const dragHandler = getDragHandler(simulation)\n        const svg = select(rootEl)\n        svg.selectAll(\"*\").remove()\n        const links = svg\n          .append(\"g\")\n          .attr(\"class\", b(\"links\"))\n          .selectAll(b(\"line\"))\n          .data(graphData.links)\n          .enter()\n          .append(\"line\")\n          .attr(\"class\", b(\"line\"))\n\n        const nodes = svg\n          .append(\"g\")\n          .selectAll(b(\"node\"))\n          .data(graphData.nodes)\n          .enter()\n          .append(\"g\")\n          .attr(\"class\", b(\"node\"))\n          .on(\"click\", d => console.log(d))\n          .call(dragHandler)\n          .append(\"circle\")\n          .attr(\"fill\", d => colorScale(d.connections.length))\n          .attr(\"r\", d => nodeRadiusScale(d.connections.length))\n\n        const constrainPositionToBoundingBox = (element, coordinate) => {\n          const boundary = coordinate === \"x\" ? chartWidth : chartHeight\n          return Math.max(\n            nodeRadiusScale(element.connections.length),\n            Math.min(boundary - nodeRadiusScale(element.connections.length), element[coordinate])\n          )\n        }\n\n        simulation\n          .nodes(graphData.nodes)\n          .on(\"tick\", () => {\n            nodes\n              .attr(\"cx\", d => constrainPositionToBoundingBox(d, \"x\"))\n              .attr(\"cy\", d => constrainPositionToBoundingBox(d, \"y\"))\n            links\n              .attr(\"x1\", d => constrainPositionToBoundingBox(d.source, \"x\"))\n              .attr(\"y1\", d => constrainPositionToBoundingBox(d.source, \"y\"))\n              .attr(\"x2\", d => constrainPositionToBoundingBox(d.target, \"x\"))\n              .attr(\"y2\", d => constrainPositionToBoundingBox(d.target, \"y\"))\n          })\n          .force(\"link\")\n          .links(graphData.links)\n      }\n    })\n  )\n)\n\nexport const ForceGraph = drawChart(({ chartHeight, chartWidth, drawChart, isRadial, setIsRadial, city, space }) => {\n  const rootEl = useRef(null)\n  useEffect(() => drawChart(rootEl.current), [isRadial])\n  return (\n    <>\n      <header className={b(\"header\")}>\n        <label className={b(\"city\")}>\n          {city}, {space}-space\n        </label>\n        <label className={b(\"is-radial-label\")}>\n          <input className={b(\"is-radial-input\")} type={\"checkbox\"} checked={isRadial} onChange={setIsRadial} />\n          Radial\n        </label>\n      </header>\n      <svg ref={rootEl} className={b()} height={chartHeight} width={chartWidth} />\n    </>\n  )\n})\n\nconst enhancer = compose(\n  // data processing\n  withStops,\n  withIndexedStops,\n  withProps(({ stops }) => {\n    const nodesForRemove = compose(\n      map(node => node.id),\n      values,\n      filter(node => node.connections.length === 2)\n    )(stops)\n    return {\n      graphData: prepareDataForGraphSpaceVisualization(removeNodeListFromGraph(nodesForRemove, stops))\n    }\n  })\n)\n\nexport default enhancer(ForceGraph)\n","import Latex from \"react-latex\"\nimport React from \"react\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\nimport ForceGraph from \"../../GraphVisualization\"\n\nconst b = BEM(\"Article\")\n\nconst Subchapter_5_1 = () => (\n  <section id={\"chapter5\"}>\n    <h1 className={b(\"header\")}>\n      Характеристики в <Latex>$\\mathbb L$-space</Latex>\n    </h1>\n    <p className={b(\"paragraph\")}>\n      Мережу характеризують різні математичні показники: ступінь вузла, найкоротший шлях, асортативність, коефіцієнт\n      кластерності тощо.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        Ступінь вузла <Latex>$k$</Latex>\n      </b>{\" \"}\n      - це кількість ребер, які з’єднують його з іншими вузлами. Тобто в <Latex>$\\mathbb L$</Latex>-space ступінь\n      вузла-зупинки вказує на кількість сусідніх до неї станцій. Ступінь відображає важливість вузла для системи. Аварія\n      на зупинці з одним ребром не спричинить транспортного колапсу. Водночас аварія на центральній зупинці, де\n      перетинаються багато маршрутів, може зупинити роботу всієї мережі.\n    </p>\n    <p className={b(\"paragraph\")}>\n      В контексті всієї мережі ми розглядаємо середній ступінь вузла <Latex>{\"$k^{avg}$\"}</Latex>.{\" \"}\n      <Latex displayMode={true}>{\"$k^{avg} = \\\\sum_{\\\\mathclap{i}} {k_i} / N,$\"}</Latex> де <Latex>$N$</Latex> - це\n      кількість вузлів мережі. Значення <Latex>{\"$k^{avg}$\"}</Latex> часто є близьким до двох. Адже основна частина\n      мережі - це проміжні зупинки маршрутів із двома ребрами.{\" \"}\n    </p>\n    <p className={b(\"paragraph\")}>\n      {\" \"}\n      У Брістолі середній ступінь вузла набагато вищий, ніж у Львові: <Latex>{\"$k_{BRS}^{avg}=3.4$\"}</Latex>, а\n      <Latex>{\"$k_{LWO}^{avg}=2.6$\"}</Latex>. Тобто середньостатистична брістольська зупинка має набагато більше\n      зв’язків, ніж львівська. Найвищі ступені вузлів <Latex>{\"$k^{max}$\"}</Latex> також сильно відрізняються. У\n      Брістолі\n      <Latex>{\"$k_{BRS}^{max} = 25$\"}</Latex>, а у Львові <Latex>{\"$k_{LWO}^{max} = 10$\"}</Latex>. Іншими словами,\n      найбільша транспортна розв'язка Брістоля має в 2.5 разів більше зв'язків за найбільшу розв'язку Львова.\n    </p>\n    <img\n      className={b(\"image\")}\n      alt={\"L-space Degree Distribution\"}\n      src={\"./img/chapter5/lSpaceDegreeDistribution.png\"}\n    />\n    <p className={b(\"paragraph\")}>\n      <b>\n        Центральність посередництва <Latex>{\"$C_{\\\\beta}$\"}</Latex>\n      </b>\n      . Значення вузла для мережі відображає не тільки ступінь <Latex>$k$</Latex>. Важливими є також вузли, через які\n      проходить найбільше оптимальних шляхів. Щоби визначити ці вузли, використовують показник центральності\n      посередництва <Latex>{\"$C_{\\\\beta}$\"}</Latex>. <Latex>{\"$C_{\\\\beta}$\"}</Latex> для вузла <Latex>{\"$ i $\"}</Latex>{\" \"}\n      показує, яка частина найкоротших шляхів усього графа проходять через вузол <Latex>{\"$ i $\"}</Latex>:{\" \"}\n      <Latex displayMode={true}>{\"$C_{\\\\beta} (i) = \\\\sum_{i} {\\\\frac{\\\\sigma(i)} {\\\\sigma}},$\"}</Latex> де{\" \"}\n      <Latex>$\\sigma$</Latex>- це кількість оптимальних шляхів у графі, а <Latex>$\\sigma (i)$</Latex> - кількість тих,\n      що проходять через вузол і Вузли із високою центральністю посередництва - це своєрідні точки вразливості мережі.\n      Якщо зупинка із високим <Latex>{\"$C_{\\\\beta}$\"}</Latex>припинить роботу, довжина оптимальних шляхів може різко\n      зрости. А в гіршому випадку мережа роз’єднається.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        Найкоротший шлях <Latex>$l$</Latex>\n      </b>\n      . Між двома зупинками мережі може існувати кілька варіантів маршрутів. Найкоротшим шляхом{\" \"}\n      <Latex>{\"$l_{AB}$\"}</Latex> між зупинками “A” та “B” називають шлях із найменшою кількістю вузлів. Для аналізу\n      мережі ми використовуємо середній найкоротший шлях <Latex>{\"$l^{avg}$\"}</Latex>. Для Брістоля{\" \"}\n      <Latex>{\"$l_{BRS}^{avg}=12$\"}</Latex> зупинок, а для Львова <Latex>{\"$l_{LWO}^{avg} = 14$\"}</Latex> зупинок.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        Діаметр мережі <Latex>$D$</Latex>\n      </b>{\" \"}\n      - це найдовший із оптимальних шляхів. В <Latex>$\\mathbb L$</Latex>-space він показує кількість зупинок між двома\n      найвіддаленішими станціями мережі. Діаметр брістольської мережі <Latex>{\"$D_{BRS} = 37$\"}</Latex> зупинок. А\n      найдовший оптимальний шлях львівської <Latex>{\"$D_{LWO} = 40$\"}</Latex> зупинок.\n    </p>\n    <img\n      className={b(\"image\")}\n      alt=\"L-space path length distribution\"\n      src={\"./img/chapter5/lSpacePathLengthDistribution.png\"}\n    />\n    <p className={b(\"paragraph\")}>\n      <b>\n        Коефіцієнт кластерності <Latex>$ C $</Latex>\n      </b>{\" \"}\n      показує тенденцію вузлів до групування. <Latex>{\"$ C_i $\"}</Latex> для вузла <Latex>$i$</Latex> відображає, яка\n      частина його сусідів пов’язані між собою.\n    </p>{\" \"}\n    <img alt=\"Clustering coefficient\" className={b(\"image\")} src={\"./img/chapter5/exampleClusteringCoefficient.png\"} />\n    <p className={b(\"paragraph\")}>\n      {\" \"}\n      Так можна дізнатися, чи сильно зв’язана наша мережа. Коефіцієнт кластерності для Брістоля набагато більший, ніж\n      для львівської мережі - <Latex>{\"$ C_{BRS}^{avg} = 0.1 $\"}</Latex>, а <Latex>{\"$ C_{LWO}^{avg} = 0.05 $\"}</Latex>.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        Асортативність <Latex>$r$</Latex>\n      </b>{\" \"}\n      показує тенденції формування зв’язків у мережі. Якщо <Latex>{\"$r > 0$\"}</Latex>, то вузлол мережі зазвичай формує\n      зв’язки із вузлами подібного ступеня (великі вузли із великими, а маленькі із маленькими). Таку мережу називають\n      асортативною. Якщо ж <Latex>{\"$r gte 0$\"}</Latex>, то навпаки вузли з високим ступенем частіше мають зв’язок із\n      вузлами низького ступеня. Таку мережу називають дисортативною. У Брістоля <Latex>{\"$r_{BRS} = 0.31$\"}</Latex>, а у\n      Львові <Latex>{\"$r_{LWO} = -0.03$\"}</Latex>. Тому львівська мережа - дисортативна, а брістольська навпаки -\n      асортативна.\n    </p>\n    <div className={b(\"illustration\", [\"wide\", \"flex\"])} style={{ height: \"100vh\" }}>\n      <div className={b(\"illustration-half\")}>\n        <ForceGraph space={\"l\"} city={\"lviv\"} />\n      </div>\n      <div className={b(\"illustration-half\")}>\n        <ForceGraph space={\"l\"} city={\"bristol\"} />\n      </div>\n    </div>\n  </section>\n)\n\nexport default Subchapter_5_1\n","import React from \"react\"\nimport Latex from \"react-latex\"\n\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\n\nconst b = BEM(\"Article\")\n\nconst Subchapter_5_2 = () => (\n  <section id={\"chapter6\"}>\n    <h1 className={b(\"header\")}>\n      Характеристики в <Latex>$\\mathbb P$</Latex>-space\n    </h1>\n    <p className={b(\"paragraph\")}>\n      Ми вже знаємо, що в <Latex>$\\mathbb P$</Latex>-space кожен із маршрутів - це повний підграф. Тому мережі в{\" \"}\n      <Latex>$\\mathbb P$</Latex>-space зазвичай сильно зв’язні. В <Latex>$\\mathbb P$</Latex>-space легко визначити\n      кількість пересадок на шляху, через це його називають “простором пересадок”.\n    </p>{\" \"}\n    <p className={b(\"paragraph\")}>\n      Середній ступінь вузла k в <Latex>$\\mathbb P$</Latex>-space набагато вищий, ніж в <Latex>$\\mathbb L$</Latex>\n      -space. Він показує середню кількість зупинок, із якими зупинка мережі має спільний маршрут. Для Брістоля{\" \"}\n      <Latex>{\"$ k_{BRS}^{avg} = 101$\"}</Latex>, а у Львові <Latex>{\"$k_{LWO}^{avg} = 91$\"}</Latex>\n    </p>\n    <p className={b(\"paragraph\")}>\n      Зі значення <Latex>$l$</Latex> в <Latex>$\\mathbb P$</Latex>-space можна знайти кількість пересадок{\" \"}\n      <Latex>{\"$T$\"}</Latex> між двома зупинками. Для зупинок одного маршруту <Latex>{\"$l^{avg}=1$\"}</Latex>. Тому можна\n      вважати, що кількість пересадок між зупинками a і b <Latex displayMode={true}>{\"$T^{ab} = l^{ab} - 1$\"}</Latex>. А\n      тому середня кількість пересадок\n      <Latex displayMode={true}>{\"$T^{avg} = l^{avg} - 1$\"}</Latex> Для Брістоля{\" \"}\n      <Latex>{\"$l_{BRS}^{avg} = 2.1$\"}</Latex>, а для Львова середній найкоротший шлях{\" \"}\n      <Latex>{\"$ l_{LWO}^{avg} = 2$\"}</Latex>. Тому будь-які дві зупинки цих мереж в середньому розділяє одна пересадка.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        Діаметр <Latex>$D$</Latex>\n      </b>\n      (максимальний найкоротший шлях) в <Latex>$\\mathbb P$</Latex>-space пов'язаний із найбільшою необхідною кількістю\n      пересадок у мережі:\n      <Latex displayMode={true}>{\"$T^{max} = D - 1$\"}</Latex>\n      <Latex>{\"$D_{BRS} = D_{LWO} = 5$\"}</Latex>, тому максимальна кількість пересадок в обох містах -{\" \"}\n      <Latex>{\"$4$\"}</Latex>.\n    </p>{\" \"}\n    <p className={b(\"paragraph\")}>\n      Ефективність найкоротшого шляху <Latex>{\"$l_{\\\\beta}$\"}</Latex> порівнює <Latex>{\"$l^{avg}$\"}</Latex> наших мереж\n      із <Latex>{\"$l^{avg}$\"}</Latex> випадкового графа. <Latex>{\"$l_{\\\\beta BRS} = 1.2$\"}</Latex>, а{\" \"}\n      <Latex>{\"$l_{\\\\beta LWO} = 1.21$\"}</Latex>. За цим показником мережа Брістоля є трошки ефективнішою, за львівську.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        Коефіцієнт кластерності <Latex>$C$</Latex>\n      </b>{\" \"}\n      показує, що львівська мережа в <Latex>$\\mathbb P$</Latex>-space є більш зв’язною за брістольську:{\" \"}\n      <Latex>{\"$C_{BRS}^{avg} = 0.62$\"}</Latex>, а <Latex>{\"$ C_{LWO}^{avg} = 0.64 $\"}</Latex>.\n    </p>\n    <p className={b(\"paragraph\")}>\n      Асортативність r в <Latex>$\\mathbb P$</Latex>-space від’ємна в обох мережах: <Latex>{\"$r_{BRS} = -0.03$\"}</Latex>,\n      а<Latex>{\"$r_{LWO} = - 0.06$\"}</Latex>. Тобто зв'язки найчастіше існують між вузлами із різними ступенями.\n    </p>\n  </section>\n)\n\nexport default Subchapter_5_2\n","import React from \"react\"\nimport Latex from \"react-latex\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\n\nconst b = BEM(\"Article\")\n\nconst Subchapter_5_3 = () => (\n  <section id={\"chapter7\"}>\n    <h1 className={b(\"header\")}>\n      Характеристики в <Latex>$\\mathbb C$</Latex>-space\n    </h1>\n    <p className={b(\"paragraph\")}>\n      <Latex>$\\mathbb C$</Latex>-space - це \"простір маршрутів\". Тут легко відслідковувати зв’язки між ними.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        <b>\n          Середній ступінь вузла <Latex>{\"$k^{avg}$\"}</Latex>\n        </b>\n      </b>{\" \"}\n      в <Latex>$\\mathbb C$</Latex>-space показує середню кількість маршрутів, із якими з’єднаний маршрут мережі.{\" \"}\n      <Latex>{\"$k_{BRS}^{avg} = 34$\"}</Latex> маршрутів, а <Latex>{\"$k_{LWO}^{avg} = 39$\"}</Latex> маршрутів.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        Середній найкоротший шлях <Latex>{\"$l^{avg}$\"}</Latex>\n      </b>\n      , як і в <Latex>$\\mathbb P$</Latex>-space вказує на середню кількість пересадок <Latex>{\"$T^{avg}$\"}</Latex>:\n      <Latex displayMode={true}>{\"$T^{avg} = l^{avg} - 1$\"}</Latex>\n      Тільки замість пересадок між зупинками в <Latex>$\\mathbb C$</Latex>-space йдеться про пересадки між маршрутами.\n      <Latex>{\"$l_{BRS}^{avg}=1.9$\"}</Latex>, а <Latex>{\"$l_{LWO}^{avg}=1.5$\"}</Latex>.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        Діаметр <Latex>$D$</Latex>\n      </b>\n      в <Latex>$\\mathbb C$</Latex>-space вказує на найбільшу необхідну кількість пересадок між двома маршрутами мережі:\n      <Latex displayMode={true}>{\"$T^{max} = D - 1$\"}</Latex>.<Latex>{\"$D_{BRS} = 4$\"}</Latex>, а{\" \"}\n      <Latex>{\"$D_{LWO} = 3$\"}</Latex>. Тому максимальна кількість пересадок у Брістолі\n      <Latex>{\"$T_{BRS}^{max} = 3$\"}</Latex>, а у Львові: <Latex>{\"$T_{LWO}^{max} = 2$\"}</Latex>.\n    </p>\n    <p className={b(\"paragraph\")}>\n      Ефективність найкоротшого шляху <Latex>{\"$l_{\\\\beta}$\"}</Latex>в <Latex>$\\mathbb C$</Latex>-space краща у\n      львівської мережі: <Latex>{\"$l_{\\\\beta BRS} = 1.2$\"}</Latex>, а <Latex>{\"$l_{\\\\beta LWO} = 1.13$\"}</Latex>.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        Коефіцієнт кластерності <Latex>$C$</Latex>\n      </b>{\" \"}\n      в <Latex>$\\mathbb C$</Latex>-space показує, наскільки зв’язані між собою маршрути.{\" \"}\n      <Latex>{\"$ C_{BRS} = 0.6 $\"}</Latex>, <Latex>{\"$ C_{LWO} = 0.75 $\"}</Latex>.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>Асортативність r</b> в <Latex>$\\mathbb C$</Latex>-space у львівській і брістольській мережах різна:{\" \"}\n      <Latex>{\"$r_{BRS} = 0.06$\"}</Latex>, <Latex>{\"$r_{LWO} = -0.05$\"}</Latex>. Тобто у брістольській мережі зв'язки\n      найчастіше формуються між вузлами подібного ступеня. У львівській мережі навпаки, вузли-маршрути із високим\n      ступенем частіше формують зв’язки із вузлами низького ступеня.\n    </p>\n  </section>\n)\n\nexport default Subchapter_5_3\n","import React from \"react\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport Subchapter1 from \"./Subchapter_5_1\"\nimport Subchapter2 from \"./Subchapter_5_2\"\nimport Subchapter3 from \"./Subchapter_5_3\"\nimport \"../Article.scss\"\n\nconst b = BEM(\"Article\")\n\nconst Chapter_5 = () => (\n  <section id={\"chapter2\"}>\n    <h1 className={b(\"header\")}>Топологічні характеристики мереж</h1>\n    <Subchapter1 />\n    <Subchapter2 />\n    <Subchapter3 />\n  </section>\n)\n\nexport default Chapter_5\n","import React from \"react\"\nimport Latex from \"react-latex\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\nconst b = BEM(\"Article\")\n\nconst Subchapter_8_1 = () => (\n  <section>\n    <h1 className={b(\"header\")}>Стійкість мереж до атак</h1>\n    <p className={b(\"paragraph\")}>\n      9 січня 2017{\" \"}\n      <a href={\"https://hromadske.ua/posts/u-londoni-straik-pratsivnykiv-metro-paralizuvav-tsentr-mista\"}>\n        робітники Лондонського метро вийшли на страйк\n      </a>\n      . 114 із 270 станцій метрополітену припинили роботу. Ще 75 працювали в обмеженому режимі. Припинення роботи\n      найпопулярнішого транспорту в місті призвело до коллапсу. Сотні людей стояли в чергах на автобуси. Залізничні\n      маршрути були переповнені. На станції Clapham Junction через скупчення натовпу провели евакуацію. До деяких частин\n      міста зникли сполучення. Багато жителів просто не змогли добратись на роботу. Лондонська мережа виявилась не\n      готовою до вилучення 114 станцій. А як можна було це передбачити?\n    </p>\n    <p className={b(\"paragraph\")}>\n      Стійкість мережі до \"випадіння\" вузлів можна дослідити різними способами. Один із них -{\" \"}\n      <a href={\"https://onlinelibrary.wiley.com/doi/abs/10.1002/rsa.3240060204\"}>\n        критерій Моллоя-Ріда <Latex>{\"$\\\\kappa$\"}</Latex>\n      </a>\n      . Із критерієм Моллоя-Ріда, маючи лише загальні показники мереж, ми можемо спрогнозувати їх стійкість до\n      випадкових вилучень вузлів. Вважається, що мережа є стійкою, якщо в ній існує найбільша зв'язна компонента GCC.\n      Найбільша зв’язна компонента - це найбільший підграф мережі, у якому між будь-якими двома вузлами є шлях. За\n      критерієм Моллоя-Ріда, GCC існує в мережі, якщо{\" \"}\n      <Latex>{\"$ \\\\kappa = \\\\frac { k^{2 avg}} {k^{avg}} \\\\geqslant 2$\"}</Latex>, де <Latex>{\"$k^{avg}$\"}</Latex> -\n      середній ступінь вузлів у мережі, a <Latex>{\"$k^{2 avg}$\"}</Latex> - середній квадратний ступінь вузла. Чим більше\n      значення <Latex>$\\\\kappa$</Latex>, тим стабільнішою є мережа.\n    </p>\n    <p className={b(\"paragraph\")}>\n      Критерій Моллоя-Ріда є найбільш корисним в <Latex>{\"$\\\\mathbb L$\"}</Latex>-space, бо мережі в{\" \"}\n      <Latex>{\"$\\\\mathbb P$\"}</Latex>- і <Latex>{\"$\\\\mathbb C$\"}</Latex>-space сильно зв'язні і їх{\" \"}\n      <Latex>{\"$\\\\kappa$\"}</Latex> зазвичай дуже високі. В <Latex>{\"$\\\\mathbb L$\"}</Latex>-space{\" \"}\n      <Latex>{\"$ \\\\kappa_{LWO} = 3.1$\"}</Latex>, <Latex>{\"$\\\\kappa_{BRS} = 4.5$\"}</Latex>. Тому мережі є стійкими до\n      випадкових випадінь вузлів. І можна припустити, що транспортна система Брістоля в <Latex>{\"$\\\\mathbb L$\"}</Latex>\n      -space є стабільнішою.\n    </p>\n    {/*add table here*/}\n    <p className={b(\"paragraph\")}>\n      Однак несправності у мережі бувають не тільки випадковими. Терористичні акти чи страйки спрямовують на\n      найважливіші зупинки транспортної системи, щоби завдати їй найбільшої шкоди. Стійкість мережі за різних сценаріїв\n      можна перевірити симуляціями атак. У дослідженні ми провели декілька сценаріїв симуляцій:\n    </p>\n    <ul>\n      <li>випадкові \"випадіння\" зупинок</li>\n      <li>\n        спрямовані атаки на найважливіші вузли:\n        <ul>\n          <li> атаки на вузли із найбільшим ступенем k</li>\n          <li>\n            атаки на вузли із найбільшою проміжною центральністю <Latex>{\"$C_{\\\\beta}$\"}</Latex>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <p className={b(\"paragraph\")}>\n      У спрямованих атаках вузли сортують у \"списки важливості\" в порядку спадання і починають видаляти із початку\n      списку. Після атаки на один вузол порядок важливості інших може змінитися. Тому симуляції спрямованих атак мають\n      два підвиди:\n    </p>\n    <ul>\n      <li>видалення вузлів із початкового \"списку важливості\"</li>\n      <li>видалення вузлів із пересортуванням \"списку важливості\" після кожного кроку симуляції</li>\n    </ul>\n    <p className={b(\"paragraph\")}>Симуляція для кожного зі сценаріїв відбувається так:</p>\n    <ol>\n      <li>Видаляємо 1% вузлів мережі за обраним сценарієм</li>\n      <li>\n        Обчислюємо розмір <Latex>{\"$S$\"}</Latex> найбільшої зв'язної компоненти GCC відносно початкового розміру мережі:\n        <Latex>{\"$S=\\\\frac{N_{GCC}} {N}$\"}</Latex>, де <Latex>{\"$N_{GCC}$\"}</Latex> - кількість вузлів у GCC, а{\" \"}\n        <Latex>{\"$N$\"}</Latex> - початкова кількість вузлів у мережі.\n      </li>\n      <li>Повторюємо кроки 1 і 2, поки не видалимо всі вузли мережі.</li>\n    </ol>\n    <p className={b(\"paragraph\")}>\n      Після симуляції для кожного виду атак ми створюємо графік залежності <Latex>{\"$S$\"}</Latex> від частки видалених\n      зупинок <Latex>{\"$с$\"}</Latex>. Далі обраховуємо площу <Latex>{\"$A$\"}</Latex> під кожною кривою на графіку:{\" \"}\n      <Latex displayMode={true}>{\"$A = \\\\int_{0}^{1} S(c) dc$\"}</Latex> Чим менша <Latex>{\"$A$\"}</Latex>, тим швидше\n      руйнує мережу певний вид атаки.\n    </p>\n    <p className={b(\"paragraph\")}>Видалення вузла у кожному з відображень має окреме значення.</p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        B <Latex>$\\mathbb L$</Latex>-space\n      </b>\n      : видалення вузла роз’єднує маршрут. Можливо на зупинці трапилась аварія і автомобілі загородили проїзд. Зупинку\n      об’їжджають іншими шляхами.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        В <Latex>$\\mathbb P$</Latex>-space\n      </b>\n      : один вузол забрали із маршруту, але між іншими вузлами того ж маршруту досі є зв’язки. Можливо зупинку вирішили\n      відмінити. Автобус проїжджає тією ж дорогою, але більше там не зупиняється.\n    </p>\n    <p className={b(\"paragraph\")}>\n      <b>\n        В <Latex>$\\mathbb C$</Latex>-space\n      </b>\n      : маршрут відмінили.\n    </p>\n  </section>\n)\n\nexport default Subchapter_8_1\n","import React from \"react\"\nimport Latex from \"react-latex\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\nconst b = BEM(\"Article\")\n\nconst Subchapter_8_2 = () => (\n  <section>\n    <h1 className={b(\"header\")}>Атаки в L-space</h1>\n    <p className={b(\"paragraph\")}>\n      В <Latex>$\\mathbb L$</Latex>-space в обох міст найповільніше руйнують мережу випадкові атаки. Найефективнішими\n      виявилися атаки за значенням центральності посередництва (із пересортуванням).\n    </p>\n    <figure>\n      <img\n        className={b(\"image\")}\n        alt={\"Bristol L-space Simulations\"}\n        src={\"./img/chapter8/bristolLSpaceSimulations.png\"}\n      />\n      <figcaption className={b(\"image-caption\")}>\n        Симуляції для Брістоля в <Latex>$\\mathbb L$</Latex>-space\n      </figcaption>\n    </figure>\n    <figure>\n      <img className={b(\"image\")} alt={\"Lviv L-space Simulations\"} src={\"./img/chapter8/lvivLSpaceSimulations.png\"} />\n      <figcaption className={b(\"image-caption\")}>\n        Симуляції для Львова в <Latex>$\\mathbb L$</Latex>-space\n      </figcaption>\n    </figure>\n  </section>\n)\n\nexport default Subchapter_8_2\n","import React from \"react\"\nimport Latex from \"react-latex\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\nconst b = BEM(\"Article\")\n\nconst Subchapter_8_3 = () => (\n  <section>\n    <h1 className={b(\"header\")}>\n      Атаки в <Latex>$\\mathbb P$</Latex>-space\n    </h1>\n    <p className={b(\"paragraph\")}>\n      Ми вже знаємо, що в <Latex>{\"$\\\\mathbb P$\"}</Latex>-space маршрути - це повні підграфи мережі. Всі вузли одного\n      маршруту мають між собою ребра. Через велику кількість ребер мережа в <Latex>{\"$\\\\mathbb P$\"}</Latex>-space є\n      стійкішою до атак, аніж в <Latex>{\"$\\\\mathbb L$\"}</Latex>-space. Це видно і на симуляціях. В{\" \"}\n      <Latex>{\"$\\\\mathbb P$\"}</Latex>-space найменш небезпечними є випадкові атаки. Вони руйнують мережі лінійно.\n      Найшвидшими виявилися атаки за центральністю посередництва із пересортуванням.\n    </p>\n    <figure>\n      <img\n        className={b(\"image\")}\n        alt={\"Bristol P-space Simulations\"}\n        src={\"./img/chapter8/bristolPSpaceSimulations.png\"}\n      />\n      <figcaption className={b(\"image-caption\")}>\n        Симуляції для Брістоля в <Latex>$\\mathbb P$</Latex>-space\n      </figcaption>\n    </figure>\n    <figure>\n      <img className={b(\"image\")} alt={\"Lviv P-space Simulations\"} src={\"./img/chapter8/lvivPSpaceSimulations.png\"} />\n      <figcaption className={b(\"image-caption\")}>\n        Симуляції для Львова в <Latex>$\\mathbb P$</Latex>-space\n      </figcaption>\n    </figure>\n  </section>\n)\n\nexport default Subchapter_8_3\n","import React from \"react\"\nimport Latex from \"react-latex\"\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"../Article.scss\"\nconst b = BEM(\"Article\")\n\nconst Subchapter_8_4 = () => (\n  <section>\n    <h1 className={b(\"header\")}>\n      Атаки в <Latex>$ \\mathbb C$</Latex>-space\n    </h1>\n    <p className={b(\"paragraph\")}>\n      У <Latex>$\\mathbb C$</Latex>-space мережі також сильно зв’язані, адже міські маршрути часто перетинаються між\n      собою. Тому симуляції в<Latex>$ \\mathbb C $</Latex>-space нагадують атаки в <Latex>$ \\mathbb P$</Latex>-space. В\n      обох містах в <Latex>$ \\mathbb C$</Latex>-space найповільнішими є випадкові атаки, а найшвидші - атаки за\n      центральністю посередництва із пересортуванням:\n    </p>\n    <figure>\n      <img\n        className={b(\"image\")}\n        alt={\"Bristol C-space Simulations\"}\n        src={\"./img/chapter8/bristolCSpaceSimulations.png\"}\n      />\n      <figcaption className={b(\"image-caption\")}>\n        Симуляції для Брістоля в <Latex>$\\mathbb C$</Latex>-space\n      </figcaption>\n    </figure>\n    <figure>\n      <img className={b(\"image\")} alt={\"Lviv C-space Simulations\"} src={\"./img/chapter8/lvivCSpaceSimulations.png\"} />\n      <figcaption className={b(\"image-caption\")}>\n        Симуляції для Львова в <Latex>$\\mathbb C$</Latex>-space\n      </figcaption>\n    </figure>\n  </section>\n)\n\nexport default Subchapter_8_4\n","import React from \"react\"\nimport Subchapter1 from \"./Subchapter_8_1\"\nimport Subchapter2 from \"./Subchapter_8_2\"\nimport Subchapter3 from \"./Subchapter_8_3\"\nimport Subchapter4 from \"./Subchapter_8_4\"\nimport \"../Article.scss\"\n\nconst Chapter_8 = () => (\n  <section id={\"chapter8\"}>\n    <Subchapter1 />\n    <Subchapter2 />\n    <Subchapter3 />\n    <Subchapter4 />\n  </section>\n)\nexport default Chapter_8\n","import React from \"react\"\nimport Latex from \"react-latex\"\n\nimport BEM from \"../../helpers/BEM.js\"\nimport \"./Article.scss\"\n\nconst b = BEM(\"Article\")\n\nconst Chapter_9 = () => (\n  <section id={\"chapter9\"}>\n    <h1 className={b(\"header\")}>Висновки</h1>\n    <p className={b(\"paragraph\")}>\n      Мережі громадського транспорту Брістоля і Львова мають багато спільного. Обидві мережі є стабільними до атак і\n      схоже реагують на різні їх види. Випадкові атаки є руйнують мережі найповільніше, а найбільш небезпечними є атаки\n      на вузли із найвищою проміжною центральністю (із пересортуванням). Ефективність шляху, діаметри мереж, середня\n      кількість пересадок також є подібними. І брістольська і львівська мережі мають відносно невелику середню довжину\n      найкоротшого шляху і високі коефіцієнти кластерності. Однак деякі характеристики транспортних систем значно\n      відрізняються. Хоча площа Брістоля менша за площу Львова, його кількість зупинок та маршрутів майже вдвічі вища,\n      за львівську. У більшості вимірів брістольська мережа має вищі середні і максимальні ступені вузлів. Найбільше\n      різницю видно у максимальних ступенях вузлів <Latex>{\"$k^{max}$\"}</Latex> в <Latex>{\"$\\\\mathbb L$-space\"}</Latex>.{\" \"}\n      <Latex>{\"$k_{BRS}^{max}$\"}</Latex> в 2.5 разів вищий за <Latex>{\"$k_{LWO}^{max}$\"}</Latex>. Крім того,\n      брістольська мережа є стійкішою за львівську до атак на зупинки (атаки в <Latex>{\"$\\\\mathbb L$-space\"}</Latex>) і\n      менш стійкою до атак на цілі маршрути (атаки в <Latex>{\"$\\\\mathbb C$-space\"}</Latex>).\n    </p>\n  </section>\n)\n\nexport default Chapter_9\n","import React from \"react\"\nimport BEM from \"../../helpers/BEM.js\"\nimport \"./Article.scss\"\n\nconst b = BEM(\"Article\")\n\nconst Chapter_10 = () => (\n  <section id={\"chapter10\"}>\n    <h1 className={b(\"header\")}>Що далі?</h1>\n    <p className={b(\"paragraph\")}>\n      У цьому дослідженні ми вивчаємо “скелети” мереж, базуючись на статичних даних. Наступний крок - дослідити мережі\n      разом із їх динамічними процесами. Можна вивчити зміни кількості транспорту і пасажиропотоків протягом дня. Варто\n      врахувати максимальну пропускну здатність зупинок та шляхів під час симуляцій. У таких симуляціях випадання одного\n      вузла спричиняє зміну навантаження на інші вузли. Якщо навантаження на вузол перевищує його пропускну здатність,\n      він також \"випадає\". Так можна буде дослідити “каскадні” руйнування мережі.\n    </p>\n  </section>\n)\n\nexport default Chapter_10\n","import Latex from \"react-latex\"\nimport React from \"react\"\nimport BEM from \"../../../helpers/BEM\"\nimport \"./Contents.scss\"\n\nconst b = BEM(\"Contents\")\n\nconst Contents = () => (\n  <div className={b([\"aligned-right-top\"])}>\n    <h2 className={b(\"header\")}>Зміст</h2>\n    <ul className={b(\"list\")}>\n      <a className={b(\"chapter\")} href=\"#chapter1\">\n        Опис проблеми та Історичний прецедент\n      </a>\n      <a className={b(\"chapter\")} href=\"#chapter2\">\n        Історія двох міст\n      </a>\n      <a className={b(\"subchapter\")} href=\"#chapter2\">\n        Брістоль\n      </a>\n      <a className={b(\"subchapter\")} href=\"#chapter2\">\n        Львів\n      </a>\n      <a className={b(\"chapter\")} href=\"#chapter3\">\n        Громадський транспорт як складна мережа\n      </a>\n      <a className={b(\"chapter\")} href=\"#chapter4\">\n        Обробка даних\n      </a>\n      <a className={b(\"chapter\")} href=\"#chapter5\">\n        Топологічні характеристики мереж\n      </a>\n      <a className={b(\"subchapter\")} href=\"#chapter5\">\n        Характеристики в <Latex>$\\mathbb L$-space</Latex>\n      </a>\n      <a className={b(\"subchapter\")} href=\"#chapter6\">\n        Характеристики в <Latex>$\\mathbb P$</Latex>-space\n      </a>\n      <a className={b(\"subchapter\")} href=\"#chapter7\">\n        Характеристики в <Latex>$\\mathbb C$</Latex>-space\n      </a>\n      <a className={b(\"chapter\")} href=\"#chapter8\">\n        Стійкість мереж до атак\n      </a>\n      <a className={b(\"subchapter\")} href=\"#chapter8\">\n        Атаки в <Latex>$\\mathbb L$</Latex>-space\n      </a>\n      <a className={b(\"subchapter\")} href=\"#chapter8\">\n        Атаки в <Latex>$\\mathbb P$</Latex>-space\n      </a>\n      <a className={b(\"subchapter\")} href=\"#chapter8\">\n        Атаки в <Latex>$\\mathbb C$</Latex>-space\n      </a>\n      <a className={b(\"chapter\")} href=\"#chapter9\">\n        Топологічні характеристики в P space\n      </a>\n      <a className={b(\"chapter\")} href=\"#chapter10\">\n        Що далі?\n      </a>\n    </ul>\n  </div>\n)\n\nexport default Contents\n","import React from \"react\"\nimport Contents from \"../Contents/Contents\"\n\nimport BEM from \"../../../helpers/BEM.js\"\nimport \"./Preface.scss\"\n\nconst b = BEM(\"Preface\")\nconst b1 = BEM(\"Contents\")\n\nconst Preface = () => (\n  <div className={b()}>\n    <h5 className={b(\"preface-title\", [\"aligned-left-top\"])}>Науковий підхід у проектуванні громадського транспорту</h5>\n    <p className={b(\"preface-content\", [\"aligned-left-bottom\"])}>\n      Ця стаття описує дослідження систем громадського транспорту Брістоля і Львова. У рамках дослідження ми вивчаємо\n      структуру транспортних систем, визначаємо їх основні характеристики і перевіряємо стійкість до атак. Для цього\n      розглядаємо громадський транспорт як мережу зв’язків. Ці зв’язки ми вивчаємо за допомогою теорії складних мереж.\n    </p>\n    <Contents classname={b1([\"aligned-right-top\"])} />\n  </div>\n)\nexport default Preface","import Preface from \"./Preface\"\nexport default Preface\n","import React, { createContext, useEffect, useContext, useRef, useState } from \"react\"\n\nimport \"./Trigger.scss\"\nimport BEM from \"../../helpers/BEM\"\nimport { pipe, identity, equals } from \"ramda\"\nconst b = BEM(\"Trigger\")\n\nexport const ScrolledContext = createContext()\n\nlet scrolledData = []\nconst registerTriggers = (position:number, action:function) => {\n  scrolledData.push([position, action])\n}\n\n//TODO: Idea! We can provide context with stream which will emit some actions with data when we will scroll to trigger.\n\nexport const TriggerContext = ({ children, ...props }) => {\n  const rootEl = useRef()\n  const [enhancedProps, enhanceProps] = useState({})\n  useEffect(() => {\n    let prevProps = enhancedProps //TODO: find better solution\n    const onWindowScroll = () => {\n      const scrolled = Math.abs(rootEl.current.getBoundingClientRect().top)\n      const nextProps = pipe(\n        ...scrolledData\n          .sort(([a], [b]) => a > b)\n          .filter(([scroll]) => scroll <= scrolled)\n          .map(([, action]) => action),\n        identity\n      )(props)\n\n      if (!equals(prevProps, nextProps)) {\n        prevProps = nextProps\n        enhanceProps(nextProps)\n      }\n    }\n    window.addEventListener(\"scroll\", onWindowScroll)\n\n    return () => window.removeEventListener(\"scroll\", onWindowScroll)\n  }, [])\n\n  return (\n    <div ref={rootEl} style={{ height: \"100%\", width: \"100%\" }}>\n      <ScrolledContext.Provider value={{ registerTriggers, scrolledProgress: enhancedProps }}>\n        {children}\n      </ScrolledContext.Provider>\n    </div>\n  )\n}\n\nconst SCROLL_TOP_OFFSET = 200\nexport const Trigger = ({ children, action }) => {\n  const { registerTriggers: registerTrigger } = useContext(ScrolledContext)\n  const rootEl = useRef(null)\n  useEffect(() => {\n    const position = rootEl.current.offsetTop - SCROLL_TOP_OFFSET\n    registerTrigger(position, action)\n  }, [])\n\n  //TODO: find adequate solution for trigger highlighting\n  return (\n    <span ref={rootEl} className={b()}>\n      {children}\n    </span>\n  )\n}\n\nexport default Trigger\n","import React from \"react\"\nimport Chapter1 from \"./Chapter_1\"\nimport Chapter2 from \"./Chapter_2\"\nimport Chapter3 from \"./Chapter_3\"\nimport Chapter4 from \"./Chapter_4\"\nimport Chapter5 from \"./Chapter_5\"\nimport Chapter8 from \"./Chapter_8\"\nimport Chapter9 from \"./Chapter_9\"\nimport Chapter10 from \"./Chapter_10\"\nimport Preface from \"./Preface\"\n\nimport BEM from \"../../helpers/BEM.js\"\nimport \"./Article.scss\"\nimport { TriggerContext } from \"../Trigger\"\n\nconst b = BEM(\"Article\")\n\nconst Article = () => (\n  <>\n    <Preface />\n    <TriggerContext>\n      <div className={b()}>\n        <Chapter1 />\n        <Chapter2 />\n        <Chapter3 />\n        <Chapter4 />\n        <Chapter5 />\n        <Chapter8 />\n        <Chapter9 />\n        <Chapter10 />\n      </div>\n    </TriggerContext>\n  </>\n)\nexport default Article\n","import Article from \"./Article\"\nexport default Article\n","import React from \"react\"\n\nimport Article from \"./Article\"\n\nconst App = () => <Article />\n\nexport default App\n","import App from \"./App\"\nimport { Provider } from \"react-redux\"\nimport React from \"react\"\nimport { ApolloProvider } from \"react-apollo\"\nimport ApolloClient from \"apollo-boost\"\n\nexport const client = new ApolloClient({\n  uri: \"http://localhost:4000/graphql\"\n})\n\nconst Root = ({ store }) => (\n  <ApolloProvider store={store} client={client}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ApolloProvider>\n)\nexport default Root\n","import { from } from \"rxjs\"\nimport { setObservableConfig } from \"recompose\"\n\nexport default () =>\n  setObservableConfig({\n    fromESObservable: from\n  })\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport configureStore from \"./configureStore\"\nimport initRecompose from \"./configRecomposeStream.js\"\nimport Root from \"./components/Root\"\n\nimport \"./styles/index.scss\"\n\ninitRecompose()\nconst store = configureStore()\n\nReactDOM.render(<Root store={store} />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}